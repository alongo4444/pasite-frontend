{"version":3,"sources":["assets/images/research.png","components/TextOrFileUpload.jsx","components/ErrorModalC.jsx","components/AutocompleteC.jsx","pages/SearchPage.jsx","pages/ResultsPage.jsx","assets/fonts/YesevaOne-Regular.ttf","components/Drawer.jsx","components/CSVorFastaC.jsx","components/GenesByClusterC.jsx","components/CircosStrain.jsx","components/DefenseSystemStrain.jsx","pages/StrainCircosResultsPage.jsx","components/Cluster.jsx","components/DropdownCheckbox.jsx","components/IsolationType.jsx","pages/BrowsePage.jsx","components/StrainForm.jsx","components/GenesByDefenseForm.jsx","pages/DownloadPage.jsx","components/CorrelationBoxPlot.jsx","components/CorrelationGraph.jsx","components/CorrelationComponents/DefVSDef.jsx","components/CorrelationComponents/DefVSIsoType.jsx","pages/CorrelationResultsPage.jsx","components/CorrelationComponents/DrawerCorrelation.jsx","components/CorrelationComponents/DefVSCluster.jsx","components/CorrelationComponents/ClusterVSIsoType.jsx","components/CorrelationComponents/DefVSCat.jsx","pages/CorrelationSearchPage.jsx","components/phylotreeFolder/branch.jsx","components/phylotreeFolder/text_width.jsx","components/phylotreeFolder/phylotree.jsx","components/PhiloTreeC.jsx","assets/images/slide1.jpg","assets/images/slide2.jpg","assets/images/slide3.jpg","assets/images/slide4.jpg","assets/images/slide5.jpg","assets/images/slide6.jpg","pages/MainPage.jsx","pages/StrainCircosPage.jsx","components/NavBarC.jsx","assets/images/title.png","App.js","reportWebVitals.js","index.js"],"names":["TextOrFileUpload","apiUrl","parentFileChangeCallback","parentHandleTextBox","updateTextbox","multipleChoice","label","limit_length","parentCallbackLegnth","React","useState","textbox","setTextbox","textOrFile","setTextOrFile","useEffect","className","onChange","checked","Form","AutocompleteC","parentCallback","selected","Group","File","e","id","renderTextBox","ErrorModalC","state","open","props","handleClose","setState","handleOpen","Modal","show","this","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","Component","labelText","disabled","setOpen","options","setOptions","loading","length","childErr","createRef","active","a","fetch","response","json","countries","filter","x","name","current","as","Row","controlId","Col","Autocomplete","multiple","onOpen","onClose","event","value","getOptionSelected","option","getOptionLabel","getOptionDisabled","renderInput","params","TextField","size","InputProps","endAdornment","Fragment","CircularProgress","color","ref","sleep","delay","Promise","resolve","setTimeout","SearchPage","rpp","setRpp","selectedA","setSelectedA","buttonOff","setButtonOff","getSelectedLength","Label","column","sm","style","textAlign","display","src","searchlogo","true","xs","Control","target","to","pathname","myArrayVariableName","ResultsPage","result_table","axios","get","then","res","data","console","log","rowsPerPages","history","location","dna_char_to_color","pageStartIndex","paginationSize","sizePerPage","showTotal","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","hideSizePerPage","hidePageListOnlyOnePage","expandRow","renderer","row","rowIndex","Accordion","defaultActiveKey","Card","Toggle","eventKey","icon","faDna","Collapse","split","map","char","colorCharProtein","faDisease","onlyOneExpanding","height","width","marginLeft","keyField","columns","dataField","text","sort","pagination","paginationFactory","drawerWidth","useStyles","makeStyles","theme","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","padding","mixins","content","flexGrow","MiniDrawer","generatingTypeHandler","classes","useTheme","Drawer","PaperProps","position","marginTop","BackdropProps","ModalProps","container","document","getElementById","anchor","clsx","paper","IconButton","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","CSVorFastaC","csv","prot","changeOptionFileType","changeOptionFastaType","Check","type","defaultChecked","paddingLeft","GenesByClusterC","genes","fileSelect","FileDownload","require","Qs","getCsv","getProt","paramsSerializer","stringify","arrayFormat","catch","error","CircosStrain","file","loaded","svnn","DefenseSystemStrain","ExportCSVButton","CSVExport","exportCSV","baseProps","csvProps","faDownload","StrainCircosResultsPage","source","svn","strainVariableName","Cluster","strains","num_cluster","selected_strainA","selected_strainB","selected_strainC","selected_geneA","selected_geneB","selected_geneC","showing_one","showing_two","showing_three","downloadable","choice_strainA","choice_strainB","choice_strainC","choice_geneA","choice_geneB","choice_geneC","getDownloadable","show_lines","selectedFile","selectedStrains","mlst","arr","push","list_strain_gene","subtree","MLST","responseType","DropdownCheckbox","selectedOptions","handleOnChange","IsolationType","ddc","qs","BrowsePage","computeTree","loadedCluster","generateType","cluster","getTree","checkmlst","base64","btoa","Uint8Array","reduce","byte","String","fromCharCode","err","url","systems","selectedOption","onFileChange","files","preventDefault","reader","FileReader","onload","result","readAsText","handleTextBox","array","Object","keys","key","index","Gtype","setSwitchTextBox","isltype","isOpen","colourOptions","all","colors","handleChange","colourStyles","control","styles","backgroundColor","isDisabled","isFocused","isSelected","chroma","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove","closeMenuOnSelect","isMulti","htmlFor","defaultScale","defaultPositionX","defaultPositionY","zoomIn","zoomOut","resetTransform","aria-label","component","Spinner","animation","downloadCluster","StrainForm","checkedAll","setCheckedAll","modalShow","setModalShow","genomic_accession","start_g","end_g","strand","attributes_x","product_accession","nonredundant_refseq","setChecked","toggleCheck","inputName","prevState","newState","MyVerticallyCenteredModal","aria-labelledby","centered","allChecked","ts","selectedAS","for","selectedC","Array","isArray","GenesByDefenseForm","DownloadPage","Tab","Container","Nav","Item","Link","Content","Pane","CorrelationBoxPlot","animationEnabled","axisY","title","dataPoints","y","withd_y","withoutd_y","am4core","am4themes_animated","CorrelationGraph","results","itemNames","without_y","eventK","itemsSelected","series","am4plugins_venn","dataFields","category","intersections","sets","items","system","isoType","strain","gene","chart","dispose","fontSize","DefVSDef","parentCallback2","DefVSIsoType","selectedDF","setSelectedDF","selectedIso","setSelectedIso","concat","getSelected","faPlusCircle","CorrelationResultsPage","DrawerCorrelation","DefVSCluster","selected_strain","setSelected_strain","selected_gene","setSelected_gene","choice_strain","paddingTop","paddingBottom","faAngleDoubleDown","ClusterVSIsoType","DefVSCat","selectedCls","setSelectedCls","CorrelationSearchPage","getParams","getTwoParams","param1","param2","getThreeParams","param3","changeResults","currEvenKey","currWindow","Branch","xScale","yScale","colorScale","showLabel","setTooltip","link","source_x","abstract_x","source_y","abstract_y","target_x","target_y","tracer_x2","alignTips","text_width","branch_line","line","d","computed_branch_styles","branchStyler","annotation","stroke","all_branch_styles","assign","branchStyle","label_style","labelStyler","fill","onMouseMove","tooltip","nativeEvent","offsetX","offsetY","undefined","onMouseOut","x1","x2","y1","y2","textAnchor","alignmentBaseline","labelStyle","slice","maxLabelWidth","defaultProps","strokeWidth","max_width","Math","min","x_branch_lengths","node","accessor","parent","x_no_branch_lengths","default_accessor","attribute","placenodes","tree","perform_internal_layout","traverse_and_compute","n","children","max","asc","resort_children","b","sort_nodes","current_leaf_height","unique_id","max_x","x_branch_length","Boolean","get_tips","max_y","node_order","internal_node_layout","is_leafnode","forEach","nodes","get_node_by_name","child","node_layout","Phylotree","newick","phylotree","skipPlacement","internalNodeLabels","attachTextWidth","rightmost","sorted_tips","showLabels","i","tip","scale","tip_x","text_x","floor","ceil","every","x_scale","scaleLinear","domain","range","y_scale","includeBLAxis","color_scale","highlightBranches","parsed_tags","scaleOrdinal","schemeCategory10","pairs","_","p","getColorScale","transform","fontFamily","links","show_label","OverlayTrigger","placement","overlay","Tooltip","HorizontalExpansionButton","faArrowLeft","faArrowRight","HorizontalCompressionButton","VerticalExpansionButton","flexDirection","faArrowUp","faArrowDown","VerticalCompressionButton","AscendingSortButton","faSortAmountUp","flip","DescendingSortButton","AlignTipsRightButton","faAlignRight","AlignTipsLeftButton","faAlignLeft","PhiloTreeC","internal","dimension","new_dimension","new_state","justifyContent","ButtonGroup","toggleDimension","handleSort","MainPage","Carousel","objectFit","slide4","alt","Caption","slide5","slide6","StrainCircosPage","setStrainVariableName","onInputChange","newInputEvent","NavBarC","static","marginBottom","activeKey","minHeight","Text","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.0294d19f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/research.cdcc44f3.png\";","import React from \"react\";\r\nimport '../styles/SearchPage.css';\r\nimport {Form, Col, Row} from \"react-bootstrap\";\r\nimport FadeIn from \"react-fade-in\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AutocompleteC from \"./AutocompleteC\";\r\nimport Switch from \"react-switch\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\n\r\n//apiUrl - For the autocomplete: the url of the requested HTML call to the backend (i.e: http://127.0.0.1:8801/api/v1/strains). The backend need to return list of dictionaries in the format: [{name: \"a\", key: \"0\"},...]\r\n//multipleChoice - For the autocomplete: determines the multiselect option, 'true' means multiselect enabled, 'false' otherwise.\r\n//parentHandleTextBox - For the autocomplete: the callback that will be called in the parent which holds this component when the user chooses an option from the autocomplete component.\r\n//parentFileChangeCallback -  the callback that will be called in the parent which holds this component when the user chooses a file. The file should contain the options with \\n separating between them.\r\n//label - the description of the component for the user\r\nexport default function TextOrFileUpload({ apiUrl, parentFileChangeCallback, parentHandleTextBox,updateTextbox=null, multipleChoice, label, limit_length=0, parentCallbackLegnth=null}) {\r\n\r\n    const [textbox, setTextbox] = React.useState(true);\r\n    const [textOrFile, setTextOrFile] = React.useState('Text Box' );\r\n\r\n\r\n    const renderTextBox = () => {\r\n        if (textbox == true) {\r\n            return <AutocompleteC  multipleChoice={true} apiUrl={apiUrl}\r\n                                   parentCallback={(selected) => parentHandleTextBox(selected)} multipleChoice={multipleChoice} parentCallbackLegnth={parentCallbackLegnth} limit_length={limit_length}/>\r\n        } else {\r\n            return <Form.Group>\r\n                <Form.File onChange={(e) => parentFileChangeCallback(e)} id=\"exampleFormControlFile1\"\r\n                           label={label}/>\r\n            </Form.Group>;\r\n        }\r\n    }\r\n\r\n    /*\r\nupdate the state of the file upload/strain selection on change\r\n */\r\n    const setSwitchTextBox = () => {\r\n        if (textbox == true) {\r\n            // this.setState({textbox: false}\r\n            setTextbox(false)\r\n            // this.setState({textOrFile: 'File Upload'});\r\n            setTextOrFile('File Upload')\r\n\r\n        } else {\r\n            // this.setState({textbox: true});\r\n            setTextbox(true)\r\n            // this.setState({textOrFile: 'Text Box'});\r\n            setTextOrFile('Text Box')\r\n        }\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n        if (updateTextbox !=null) {\r\n            updateTextbox(textbox)\r\n        }\r\n    },[textbox])\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n            <div className=\"textBox\">\r\n                <div className='rowC'>\r\n                    <Switch onChange={setSwitchTextBox} checked={textbox}/> <span\r\n                    className=\"switch\">{textOrFile}</span>\r\n                </div>\r\n                <Form>\r\n                    {renderTextBox()}\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport '../styles/StrainForm.css';\r\nimport axios from \"axios\";\r\nimport {Form, Col, Row, Button, Modal} from \"react-bootstrap\";\r\nimport AutocompleteC from \"../components/AutocompleteC\";\r\nimport TextOrFileUpload from \"./TextOrFileUpload\";\r\n\r\nclass ErrorModalC extends Component {\r\n    state = {open: this.props.open};\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false});\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Modal show={this.state.open} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Server Error</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>There is a problem with the server request. Sorry for the inconvenience.</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>{this.setState({open:false})}}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n} export default ErrorModalC;","import React from \"react\";\r\nimport '../styles/SearchPage.css';\r\nimport {Form, Col, Row, Modal, Button} from \"react-bootstrap\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport ErrorModalC from \"./ErrorModalC\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\n\r\n//apiUrl - the url of the requested HTML call to the backend (i.e: https://paeruginosite.herokuapp.com/api/v1/strains). The backend need to return list of dictionaries in the format: [{name: \"a\", key: \"0\"},...]\r\n//parentCallback - the callback that will be called in the parent which holds this component. The parent will receive the current selected objects for each change on this component.  See DownloadPage for example or ask Alon.\r\n//multipleChoice - determines the multiselect option, 'true' means multiselect enabled, 'false' otherwise.\r\n//labelText - The text which will appear in the label of the component (i.e: \"Select single/multiple strain/s:\").\r\n//disabled - Disables the autocomplete\r\nexport default function AutocompleteC({\r\n                                          apiUrl,\r\n                                          parentCallback,\r\n                                          multipleChoice,\r\n                                          limit_length = 0,\r\n                                          parentCallbackLegnth = null,\r\n                                          labelText =\"\",\r\n                                          disabled=false\r\n                                      }) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n\r\n    const childErr = React.createRef();\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n\r\n        (async () => {\r\n            try {\r\n                const response = await fetch(apiUrl);\r\n\r\n                // await sleep(1e3); // For demo purposes.\r\n                const countries = await response.json();\r\n                if (active) {\r\n                    setOptions(countries.filter(x => x.name != null))\r\n                }\r\n            } catch (e) {\r\n                if(childErr.current) {\r\n                    childErr.current.handleOpen();\r\n                }\r\n            }\r\n\r\n        })();\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n            <Form.Group as={Row} controlId=\"selectStrain\">\r\n                <Col>\r\n                    <Autocomplete\r\n\r\n                        disabled={disabled}\r\n                        id=\"asynchronous-demo\"\r\n                        multiple={multipleChoice}\r\n                        // style={{ width: \"100%\" }}\r\n                        open={open}\r\n                        onOpen={() => {\r\n                            setOpen(true);\r\n                        }}\r\n                        onClose={() => {\r\n                            setOpen(false);\r\n                        }}\r\n                        // onChange={(event, value) => setSelectedA(value)}\r\n                        onChange={(event, value) => parentCallback(value)}\r\n                        getOptionSelected={(option, value) => option.name === value.name}\r\n                        getOptionLabel={(option) => option.name}\r\n                        options={options}\r\n                        getOptionDisabled={(() => {\r\n                            if (parentCallbackLegnth) {\r\n                                if (parentCallbackLegnth() >= limit_length) {\r\n                                    return true\r\n                                }\r\n                            }\r\n                            return false\r\n                            // parentCallbackLegnth() > 3 && false ? true : false\r\n                        })\r\n                        }\r\n                        loading={loading}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                // label=\"Choose strains...\"\r\n                                label = {labelText}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                InputProps={{\r\n                                    ...params.InputProps,\r\n                                    endAdornment: (\r\n                                        <React.Fragment>\r\n                                            {loading ? <CircularProgress color=\"inherit\" size={20}/> : null}\r\n                                            {params.InputProps.endAdornment}\r\n                                        </React.Fragment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        )}\r\n                    />\r\n                </Col>\r\n            </Form.Group>\r\n            {/*<Modal show={show} onHide={handleClose}>*/}\r\n            {/*    <Modal.Header closeButton>*/}\r\n            {/*        <Modal.Title>Modal heading</Modal.Title>*/}\r\n            {/*    </Modal.Header>*/}\r\n            {/*    <Modal.Body>There is a problem with the server request. Sorry for the inconvenience.</Modal.Body>*/}\r\n            {/*    <Modal.Footer>*/}\r\n            {/*        <Button variant=\"secondary\" onClick={handleClose}>*/}\r\n            {/*            Close*/}\r\n            {/*        </Button>*/}\r\n            {/*    </Modal.Footer>*/}\r\n            {/*</Modal>*/}\r\n            <ErrorModalC open={false} ref={childErr}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport '../styles/SearchPage.css';\r\nimport {Form, Col, Row, Button, OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport searchlogo from '../assets/images/research.png'\r\nimport {faQuestion} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {Link} from 'react-router-dom';\r\nimport AutocompleteC from \"../components/AutocompleteC\";\r\n\r\nfunction sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\nexport default function SearchPage() {\r\n    const [rpp, setRpp] = React.useState(10);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState([]);\r\n    const [selectedA, setSelectedA] = React.useState(false);\r\n    const loading = open && options.length === 0;\r\n    const [buttonOff, setButtonOff] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n        (async () => {\r\n            const response = await fetch('https://paeruginosite.herokuapp.com/api/v1/strains');\r\n            await sleep(1e3); // For demo purposes.\r\n            const countries = await response.json();\r\n            if (active) {\r\n                setOptions(countries.filter(x=> x.name != null))\r\n            }\r\n\r\n        })();\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    },[loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    React.useEffect(() => {\r\n        if (getSelectedLength() > 0){\r\n            setButtonOff(false)\r\n        }\r\n        else{\r\n            setButtonOff(true)\r\n        }\r\n    }, [selectedA]);\r\n\r\n    const getSelectedLength = () => {\r\n        return selectedA.length;\r\n    }\r\n\r\n    const getSelected = (selected) => {\r\n        setSelectedA(selected)\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n            <FadeIn>\r\n                <Form>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label className=\"wrapper\" column sm=\"4\">\r\n                            <p style={{textAlign: \"right\"}}></p>\r\n                        </Form.Label>\r\n                        <Col sm=\"4\">\r\n                            <div className=\"imgr_wr\">\r\n                                <img style={{display: \"inline-block\"}} className=\"imgr\" src={searchlogo}/>\r\n                            </div>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"selectStrain\">\r\n                        <Form.Label className=\"wrapper\" column sm=\"4\">\r\n                            <p style={{textAlign: \"right\"}}>{\"Select single/multiple strain/s:\"}</p>\r\n                        </Form.Label>\r\n\r\n                        <Col sm=\"4\">\r\n                            <AutocompleteC multipleChoice={true} true parentCallback={getSelected} apiUrl=\"https://paeruginosite.herokuapp.com/api/v1/strains\"/>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"numResults\">\r\n                        <Form.Label className=\"wrapper\" column sm=\"4\">\r\n                            <p style={{textAlign: \"right\"}}>Number of results in page:</p>\r\n                        </Form.Label>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control className=\"mb-1\" as=\"select\" value={rpp}\r\n                                          onChange={e => setRpp(e.target.value)}>\r\n                                <option>10</option>\r\n                                <option>25</option>\r\n                                <option>30</option>\r\n                                <option>50</option>\r\n                                <option>1000</option>\r\n                            </Form.Control>\r\n                        </Col>\r\n\r\n                    </Form.Group>\r\n\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Link to={{\r\n                            pathname: '/results',\r\n                            state: {\r\n                                myArrayVariableName: selectedA, // send the selected items as a parameter to the result page\r\n                                rpp: rpp //send the number of results per page as a parameter to the result page\r\n                            }\r\n                        }}><Button disabled={buttonOff}>Search</Button></Link>\r\n                    </div>\r\n                </Form>\r\n            </FadeIn>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport axios from \"axios\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport '../styles/ResultsPage.css';\r\nimport {Button, Accordion, Card} from \"react-bootstrap\";\r\nimport {faDna, faDisease, faShieldVirus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass ResultsPage extends Component {\r\n    state = {\r\n        result_table: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get(\"https://paeruginosite.herokuapp.com/api/v1/genes\")\r\n            .then((res) => {\r\n                this.setState({result_table: res.data});\r\n                console.log(this.state.result_table)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const params = this.props.history.location.state.myArrayVariableName; // get the selected items from the search page (sent from the SearchPage component)\r\n        const rowsPerPages = this.props.history.location.state.rpp; // get the selected number of results each page from previous component\r\n\r\n        const columns = [\r\n            {dataField: \"locus_tag\", text: \"locus_tag\", sort: true},\r\n            {dataField: \"genomic_accession\", text: \"genomic accession\", sort: true},\r\n            {dataField: \"start\", text: \"start\", sort: true},\r\n            {dataField: \"end\", text: \"end\", sort: true},\r\n            {dataField: \"strand\", text: \"strand\", sort: true},\r\n            {dataField: \"name\", text: \"name\", sort: true},\r\n            {dataField: \"symbol\", text: \"symbol\", sort: true},\r\n            // {dataField: \"dna_sequence\", text: \"dna sequence\", sort: true},\r\n            // {dataField: \"protein_sequence\", text: \"protein sequence\", sort: true}\r\n        ]\r\n\r\n        const dna_char_to_color = {\r\n            'A': '#DC185D',\r\n            'E': '#B8144E',\r\n            'G': '#93103E',\r\n            'T': '#bc6383',\r\n            'F': '#DC185D',\r\n            'W': '#d01a5a',\r\n            'S': '#8A0512',\r\n            'M': '#9D0615',\r\n            'K': '#B10618',\r\n            'R': '#C5071A',\r\n            'Y': '#D9081D',\r\n            'B': '#EC091F',\r\n            'D': '#F6132A',\r\n            'I': '#F6132A',\r\n            'C': '#bc6383',\r\n            'H': '#F7263B',\r\n            'V': '#F83A4D',\r\n            'N': '#F83A4D',\r\n            'L': '#F94E5F',\r\n            'Q': '#FA7582',\r\n            'P': '#d01a5a',\r\n            'Z': '#370617'\r\n\r\n        }\r\n\r\n        const options = {\r\n            pageStartIndex: 1, // first page will be 0, default is 1\r\n            paginationSize: 10,  // the pagination bar size, default is 5\r\n            sizePerPage: rowsPerPages,\r\n            showTotal: true, // display pagination information\r\n            firstPageText: '<<', // the text of first page button\r\n            prePageText: 'Prev', // the text of previous page button\r\n            nextPageText: 'Next', // the text of next page button\r\n            lastPageText: '>>', // the text of last page button\r\n            nextPageTitle: 'Go to next', // the title of next page button\r\n            prePageTitle: 'Go to previous', // the title of previous page button\r\n            firstPageTitle: 'Go to first', // the title of first page button\r\n            lastPageTitle: 'Go to last', // the title of last page button\r\n            hideSizePerPage: false, // hide the size per page dropdown\r\n            hidePageListOnlyOnePage: true, // hide pagination bar when only one page, default is false\r\n\r\n        }\r\n\r\n        const expandRow = {\r\n            renderer: (row, rowIndex) => {return (\r\n                <div>\r\n\r\n                    <Accordion defaultActiveKey={\"0\"}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Accordion.Toggle className=\"acrd\" as={Button} variant=\"link\" eventKey=\"0\">\r\n                                    <FontAwesomeIcon icon={faDna}/> DNA Sequence\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body id=\"d-seq\">\r\n                                    {row['dna_sequence'].split(\"\").map(char => {\r\n                                        return <span className={\"seq_c\"}\r\n                                                     style={{color: this.colorCharProtein(char)}}>{`${char}`}</span>;\r\n                                    })}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                    <FontAwesomeIcon icon={faDisease}/> Protein Sequence\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"1\">\r\n                                <Card.Body id=\"p-seq\">\r\n                                    {row['protein_sequence'].split(\"\").map(char => {\r\n                                        return <span className={\"seq_c\"}\r\n                                                     style={{color: dna_char_to_color[char]}}>{`${char}`}</span>;\r\n                                    })}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n\r\n                </div>\r\n            )}, onlyOneExpanding: true\r\n        };\r\n\r\n\r\n        return (\r\n            <div>\r\n                <FadeIn>\r\n                    <div style={{height: \"100%\", width: \"90%\",marginLeft:\"5%\"}}>\r\n                        <BootstrapTable\r\n                            keyField=\"locus_tag\"\r\n                            data={this.state.result_table}\r\n                            columns={columns} //which columns from the data to show as columns\r\n                            pagination={ paginationFactory(options) }\r\n                            expandRow={expandRow}\r\n                        />\r\n                    </div>\r\n                </FadeIn>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    colorCharProtein(char) {\r\n        if (char == 'A')\r\n            return 'red'\r\n        else if (char == 'T') {\r\n            return 'green'\r\n        } else if (char == 'G') {\r\n            return 'brown'\r\n        }\r\n        return 'blue'\r\n    }\r\n}\r\n\r\nexport default ResultsPage;","export default __webpack_public_path__ + \"static/media/YesevaOne-Regular.eba55a46.ttf\";","import React from \"react\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport { BsShieldShaded } from 'react-icons/bs';\r\nimport { SiMicrogenetics } from 'react-icons/si';\r\nimport { GiDrippingTube } from 'react-icons/gi';\r\nimport { GiShieldEchoes } from 'react-icons/gi';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        // justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function MiniDrawer({generatingTypeHandler}) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        if (open == true) {\r\n            setOpen(false)\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Drawer\r\n                PaperProps={{ style: { position: 'absolute' ,height:'90.7%',marginTop:'4.5%'},width:'70%' }}\r\n                BackdropProps={{ style: { position: 'absolute' } }}\r\n                ModalProps={{\r\n                    container: document.getElementById('drawer'),\r\n                    style: { position: 'absolute' }\r\n                }}\r\n                anchor='right'\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerOpen}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                    Choose Display:\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n\r\n                    <ListItem button key=\"defense\" onClick={() => generatingTypeHandler(\"defense\")}>\r\n                        <ListItemIcon><BsShieldShaded/></ListItemIcon>\r\n                        <ListItemText primary=\"Defense Systems\"/>\r\n                    </ListItem>\r\n                    <ListItem button key=\"cluster\" onClick={() => generatingTypeHandler(\"cluster\")}>\r\n                        <ListItemIcon><SiMicrogenetics/></ListItemIcon>\r\n                        <ListItemText primary=\"Gene Cluster\"/>\r\n                    </ListItem>\r\n                    <ListItem button key=\"isolation\" onClick={() => generatingTypeHandler(\"isolation\")}>\r\n                        <ListItemIcon><GiDrippingTube/></ListItemIcon>\r\n                        <ListItemText primary=\"Isolation Type\"/>\r\n                    </ListItem>\r\n                    <ListItem button key=\"distinct systems\" onClick={() => generatingTypeHandler(\"distinct systems\")}>\r\n                        <ListItemIcon><GiShieldEchoes/></ListItemIcon>\r\n                        <ListItemText primary=\"Number of Distinct Systems\"/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}","import React, {Component} from \"react\";\r\nimport '../styles/SearchPage.css';\r\nimport {Form, Col, Row, Button} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport ErrorModalC from \"./ErrorModalC\";\r\n\r\n\r\nclass CSVorFastaC extends Component {\r\n\r\n    // const [csv, setCsv] = React.useState(true);\r\n    // const [prot, setProt] = React.useState(true);\r\n\r\n    state = {\r\n        csv: true,\r\n        prot: true\r\n    };\r\n\r\n    changeOptionFileType = () => {\r\n        // setCsv(!csv)\r\n        this.setState({csv: !this.state.csv})\r\n    }\r\n\r\n    changeOptionFastaType = () => {\r\n        // setProt(!prot)\r\n        this.setState({prot: !this.state.prot})\r\n    }\r\n\r\n\r\n    getCsv(){\r\n        return this.state.csv;\r\n    }\r\n\r\n    getProt(){\r\n        return this.state.prot;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-form\">\r\n                <Form>\r\n                    <fieldset>\r\n                        <Form.Group as={Row}>\r\n                            <Col sm={5}>\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"CSV File\"\r\n                                    name=\"downloadoption\"\r\n                                    id=\"csvfile\"\r\n                                    defaultChecked={true}\r\n                                    onChange={this.changeOptionFileType}\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Fasta file\"\r\n                                    name=\"downloadoption\"\r\n                                    id=\"fastafile\"\r\n                                    onChange={this.changeOptionFileType}\r\n                                />\r\n                                <fieldset>\r\n                                    <Form.Group style={{paddingLeft: '50px'}} as={Row}>\r\n                                            <Form.Check\r\n                                                type=\"radio\"\r\n                                                label=\"Fasta of Protein\"\r\n                                                name=\"fastoption\"\r\n                                                id=\"prot\"\r\n                                                disabled={this.state.csv}\r\n                                                defaultChecked={this.state.csv}\r\n                                                onChange={this.changeOptionFastaType}\r\n                                            />\r\n                                            <Form.Check\r\n                                                type=\"radio\"\r\n                                                label=\"Fasta of DNA\"\r\n                                                name=\"fastoption\"\r\n                                                id=\"dna\"\r\n                                                disabled={this.state.csv}\r\n                                                onChange={this.changeOptionFastaType}\r\n                                            />\r\n                                    </Form.Group>\r\n                                </fieldset>\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </fieldset>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CSVorFastaC;","import React from \"react\";\r\nimport '../styles/SearchPage.css';\r\nimport {Form, Col, Row, Button} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport ErrorModalC from \"./ErrorModalC\";\r\nimport CSVorFastaC from \"../components/CSVorFastaC\";\r\n\r\n\r\nexport default function GenesByClusterC({genes}) {\r\n\r\n    const childErr = React.createRef();\r\n    const fileSelect = React.createRef();\r\n\r\n    function getData() {\r\n        const FileDownload = require('js-file-download');\r\n\r\n        const Qs = require('qs')\r\n\r\n        let params = { genes: genes, csv: fileSelect.current.getCsv(), prot: fileSelect.current.getProt()}\r\n\r\n        let myAxios = axios.create({\r\n            paramsSerializer: params => Qs.stringify(params, {arrayFormat: 'repeat'})\r\n        })\r\n\r\n        myAxios.get('https://paeruginosite.herokuapp.com/api/v1/genes/genes_by_cluster',{params})\r\n            .then((res) => {\r\n                if (fileSelect.current.getCsv()) {\r\n                    FileDownload(res.data, 'genes_by_cluster.csv')\r\n                } else {\r\n                    FileDownload(res.data, 'genes_by_cluster.faa')\r\n                }\r\n            }).catch(function (error) {childErr.current.handleOpen()});\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n            <CSVorFastaC ref={fileSelect}/>\r\n            <div style={{textAlign: \"left\"}}>\r\n                <Button onClick={getData}>Download Genes in the Same Cluster</Button>\r\n            </div>\r\n            <ErrorModalC open={false} ref={childErr}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\nimport '../styles/CircosStrain.css';\r\n\r\nclass CircosStrain extends Component {\r\n    state = {\r\n        file: null,\r\n        loaded: false\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <iframe className=\"circosFrame\" src={\"https://paeruginosite.herokuapp.com/api/v1/strains/strainCircos/\" + this.props.svnn} width=\"1000\" height=\"1000\" />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CircosStrain;","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport '../styles/DefenseSystemStrain.css';\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport {faDownload, faQuestion} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass DefenseSystemStrain extends Component {\r\n    state = {\r\n        result_table: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get(\r\n                \"https://paeruginosite.herokuapp.com/api/v1/strains/strainGenesDefSystems/\"+this.props.svnn\r\n            )\r\n            .then(response => {\r\n                this.setState({result_table: response.data})\r\n            });\r\n    }\r\n    render() {\r\n        const { ExportCSVButton } = CSVExport;\r\n        const columns = [\r\n            {dataField: \"locus_tag\", text: \"locus tag\", sort: true},\r\n            {dataField: \"defense_system\", text: \"defense system \", sort: true},\r\n            {dataField: \"anti_crispr\", text: \"anti crispr\", sort: true},\r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                <FadeIn>\r\n                    <div style={{height: \"100%\", width: \"90%\",marginLeft:\"5%\"}}>\r\n\r\n                        <ToolkitProvider\r\n                            keyField=\"id\"\r\n                            data={this.state.result_table}\r\n                            columns={ columns }\r\n                            exportCSV\r\n                        >\r\n                            {\r\n                                props => (\r\n                                    <div>\r\n                                        <BootstrapTable  { ...props.baseProps }\r\n                                                         pagination={paginationFactory({\r\n                                                             sizePerPage: 50,\r\n                                                             pageStartIndex: 1, // first page will be 0, default is 1\r\n                                                             paginationSize: 10,  // the pagination bar size, default is 5\r\n                                                             showTotal: true, // display pagination information\r\n                                                             firstPageText: '<<', // the text of first page button\r\n                                                             prePageText: 'Prev', // the text of previous page button\r\n                                                             nextPageText: 'Next', // the text of next page button\r\n                                                             lastPageText: '>>', // the text of last page button\r\n                                                             nextPageTitle: 'Go to next', // the title of next page button\r\n                                                             prePageTitle: 'Go to previous', // the title of previous page button\r\n                                                             firstPageTitle: 'Go to first', // the title of first page button\r\n                                                             lastPageTitle: 'Go to last', // the title of last page button\r\n                                                             hideSizePerPage: false, // hide the size per page dropdown\r\n                                                             hidePageListOnlyOnePage: true, // hide pagination bar when only one page, default is false\r\n                                                         })}\r\n                                        />\r\n                                        <ExportCSVButton className=\"exportB\" { ...props.csvProps }><FontAwesomeIcon icon={faDownload}/> Download to CSV</ExportCSVButton>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </ToolkitProvider>\r\n\r\n                        {/*<BootstrapTable*/}\r\n                        {/*    keyField=\"locus_tag\"*/}\r\n                        {/*    data={this.state.result_table}*/}\r\n                        {/*    columns={columns} //which columns from the data to show as columns*/}\r\n                        {/*    pagination={paginationFactory({*/}\r\n                        {/*        sizePerPage: 50,*/}\r\n                        {/*        pageStartIndex: 1, // first page will be 0, default is 1*/}\r\n                        {/*        paginationSize: 10,  // the pagination bar size, default is 5*/}\r\n                        {/*        showTotal: true, // display pagination information*/}\r\n                        {/*        firstPageText: '<<', // the text of first page button*/}\r\n                        {/*        prePageText: 'Prev', // the text of previous page button*/}\r\n                        {/*        nextPageText: 'Next', // the text of next page button*/}\r\n                        {/*        lastPageText: '>>', // the text of last page button*/}\r\n                        {/*        nextPageTitle: 'Go to next', // the title of next page button*/}\r\n                        {/*        prePageTitle: 'Go to previous', // the title of previous page button*/}\r\n                        {/*        firstPageTitle: 'Go to first', // the title of first page button*/}\r\n                        {/*        lastPageTitle: 'Go to last', // the title of last page button*/}\r\n                        {/*        hideSizePerPage: false, // hide the size per page dropdown*/}\r\n                        {/*        hidePageListOnlyOnePage: true, // hide pagination bar when only one page, default is false*/}\r\n                        {/*    })}*/}\r\n                        {/*/>*/}\r\n                    </div>\r\n                </FadeIn>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DefenseSystemStrain;","import React, {Component, useState, useRef} from \"react\";\r\nimport CircosStrain from \"../components/CircosStrain\";\r\nimport DefenseSystemStrain from \"../components/DefenseSystemStrain\"\r\n\r\nclass StrainCircosResultsPage extends Component {\r\n\r\n    state = {source: null};\r\n\r\n//\r\n    render() {\r\n        const svn = this.props.history.location.state.strainVariableName;\r\n        return(\r\n            <div>\r\n                <CircosStrain svnn={svn} />\r\n                <DefenseSystemStrain svnn={svn}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StrainCircosResultsPage;","import React, {Component} from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport '../styles/StrainForm.css';\r\nimport axios from \"axios\";\r\nimport {Form, Col, Row, Button, Modal} from \"react-bootstrap\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport AutocompleteC from \"./AutocompleteC\";\r\n\r\nimport GenesByClusterC from \"./GenesByClusterC\";\r\nimport {serialize} from \"react-awesome-slider/src/helpers/components\";\r\nimport StrainCircosResultsPage from \"../pages/StrainCircosResultsPage\";\r\n\r\nclass Cluster extends Component {\r\n    state = {\r\n        strains: [\r\n            {\r\n                name: \"PAO1\",\r\n                id: \"GCF_000006765.1\"\r\n            },\r\n            {\r\n                name: \"PA14\",\r\n                id: \"GCF_000014625.1\"\r\n            }\r\n        ],\r\n        num_cluster: ['1', '2', '3'],\r\n        selected_strainA: false,\r\n        selected_strainB: false,\r\n        selected_strainC: false,\r\n        selected_geneA: false,\r\n        selected_geneB: false,\r\n        selected_geneC: false,\r\n        showing_one: false,\r\n        showing_two: false,\r\n        showing_three: false,\r\n        downloadable: false\r\n\r\n    }\r\n\r\n    choice_strainA = (selected) => {\r\n        if (selected != null) {\r\n            this.setState({\r\n                selected_strainA: selected\r\n            })\r\n        }\r\n    }\r\n    choice_strainB = (selected) => {\r\n        if (selected != null) {\r\n            this.setState({\r\n                selected_strainB: selected\r\n            })\r\n        }\r\n    }\r\n\r\n    choice_strainC = (selected) => {\r\n        if (selected != null) {\r\n            this.setState({\r\n                selected_strainC: selected\r\n            })\r\n        }\r\n    }\r\n\r\n    choice_geneA = (selected) => {\r\n        if (selected != null) {\r\n            this.setState({\r\n                selected_geneA: selected.name\r\n            })\r\n        }\r\n    }\r\n    choice_geneB = (selected) => {\r\n        if (selected != null) {\r\n            this.setState({\r\n                selected_geneB: selected.name\r\n            })\r\n        }\r\n    }\r\n    choice_geneC = (selected) => {\r\n        if (selected != null) {\r\n            this.setState({\r\n                selected_geneC: selected.name\r\n            })\r\n        }\r\n    }\r\n\r\n    getDownloadable = ()=> {\r\n        return this.state.downloadable\r\n    }\r\n\r\n    getTree(selectedFile, selectedStrains, mlst) {\r\n        const arr = []\r\n        if (this.state.showing_one) {\r\n            arr.push(this.state.selected_strainA.name + '-' + this.state.selected_geneA)\r\n        }\r\n        if (this.state.showing_two) {\r\n            arr.push(this.state.selected_strainB.name + '-' + this.state.selected_geneB)\r\n        }\r\n        if (this.state.showing_three) {\r\n            arr.push(this.state.selected_strainC.name + '-' + this.state.selected_geneC)\r\n        }\r\n        console.log(arr);\r\n        const Qs = require('qs')\r\n        this.setState({downloadable: true})\r\n        return axios.get('https://paeruginosite.herokuapp.com/api/v1/cluster/cluster_tree', {\r\n                params: {\r\n                    list_strain_gene: arr,\r\n                    subtree: selectedFile.length > 0 ? selectedFile : selectedStrains,\r\n                    MLST: mlst\r\n                },\r\n                paramsSerializer: function (params) {\r\n                    return Qs.stringify(params, {arrayFormat: 'repeat'})\r\n                },\r\n                responseType: 'arraybuffer',\r\n            }\r\n        )\r\n    }\r\n\r\n    show_lines = (value) => {\r\n        if (value == '1') {\r\n            this.setState({\r\n                    showing_one: true,\r\n                    showing_two: false,\r\n                    showing_three: false,\r\n                    selected_geneB: \"\",\r\n                    selected_strainB: \"\",\r\n                    selected_geneC: \"\",\r\n                    selected_strainC: \"\",\r\n                }\r\n            )\r\n        }\r\n        if (value == '2') {\r\n            this.setState({\r\n                    showing_one: true,\r\n                    showing_two: true,\r\n                    showing_three: false,\r\n                    selected_geneC: \"\",\r\n                    selected_strainC: \"\",\r\n                }\r\n            )\r\n        }\r\n        if (value == '3') {\r\n            this.setState({\r\n                    showing_one: true,\r\n                    showing_two: true,\r\n                    showing_three: true,\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const showDownloadOption = () => {\r\n            if (this.state.downloadable == true) {\r\n                return (\r\n                    <GenesByClusterC\r\n                        genes={[this.state.selected_geneA, this.state.selected_geneB, this.state.selected_geneC]}/>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div></div>\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <container>\r\n                <div>\r\n                    <Autocomplete\r\n                        id=\"Choose_num\"\r\n                        options={this.state.num_cluster}\r\n                        getOptionLabel={(option) => option}\r\n                        //style={{width: 300}}\r\n                        onChange={(event, value) => this.show_lines(value)}\r\n                        renderInput={(params) => <TextField {...params} size=\"small\" label=\"Choose num of gene\"\r\n                                                            variant=\"outlined\"/>}\r\n                    />\r\n                    <div>\r\n                        {this.state.showing_one\r\n                            ? <div>\r\n                                <FadeIn>\r\n                                    <p style={{textAlign: \"left\"}}>select first strain and gene</p>\r\n                                    <Autocomplete\r\n                                        id=\"strains-combo-box\"\r\n                                        options={this.state.strains}\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        //style={{width: 300}}\r\n                                        onChange={(event, value) => this.choice_strainA(value)}\r\n                                        renderInput={(params) => <TextField {...params} size=\"small\"\r\n                                                                            label=\"Choose Strain\"\r\n                                                                            variant=\"outlined\"/>}\r\n                                    />\r\n                                    <br/>\r\n                                    <AutocompleteC multipleChoice={false} true\r\n                                                   parentCallback={this.choice_geneA}\r\n                                                   apiUrl={\"https://paeruginosite.herokuapp.com/api/v1/cluster/get_gene_strain_id/\" + this.state.selected_strainA.id}\r\n                                                   labelText=\"Choose Gene\"/>\r\n                                </FadeIn>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {this.state.showing_two\r\n                            ? <div>\r\n                                <FadeIn>\r\n                                    <p style={{textAlign: \"left\"}}>select second strain and gene</p>\r\n                                    <Autocomplete\r\n                                        id=\"strains-combo-box\"\r\n                                        options={this.state.strains}\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        //style={{width: 300}}\r\n                                        onChange={(event, value) => this.choice_strainB(value)}\r\n                                        renderInput={(params) => <TextField {...params} size=\"small\"\r\n                                                                            label=\"Choose Strain\"\r\n                                                                            variant=\"outlined\"/>}\r\n                                    />\r\n                                    <br/>\r\n                                    <AutocompleteC multipleChoice={false} true\r\n                                                   parentCallback={this.choice_geneB}\r\n                                                   apiUrl={\"https://paeruginosite.herokuapp.com/api/v1/cluster/get_gene_strain_id/\" + this.state.selected_strainB.id}\r\n                                                   labelText=\"Choose Gene\"/>\r\n                                </FadeIn>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {this.state.showing_three\r\n                            ? <div>\r\n                                <FadeIn>\r\n                                    <p style={{textAlign: \"left\"}}>select third strain and gene</p>\r\n                                    <Autocomplete\r\n                                        id=\"strains-combo-box\"\r\n                                        options={this.state.strains}\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        //style={{width: 300}}\r\n                                        onChange={(event, value) => this.choice_strainC(value)}\r\n                                        renderInput={(params) => <TextField {...params} size=\"small\"\r\n                                                                            label=\"Choose Strain\"\r\n                                                                            variant=\"outlined\"/>}\r\n                                    />\r\n                                    <br/>\r\n                                    <AutocompleteC multipleChoice={false} true\r\n                                                   parentCallback={this.choice_geneC}\r\n                                                   apiUrl={\"https://paeruginosite.herokuapp.com/api/v1/cluster/get_gene_strain_id/\" + this.state.selected_strainC.id}\r\n                                                   labelText=\"Choose Gene\"/>\r\n\r\n                                </FadeIn>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    {/*{showDownloadOption()}*/}\r\n                </div>\r\n            </container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cluster;","import React from \"react\";\r\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\r\n\r\nclass DropdownCheckbox extends React.Component {\r\n\r\n    state = {selectedOptions: []};\r\n\r\n    getSelected(){\r\n        return this.state.selectedOptions;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DropdownMultiselect\r\n                options={this.props.options} //[\"Australia\", \"Canada\", \"USA\", \"Poland\", \"Spain\", \"France\"]\r\n                name=\"dropdown\"\r\n                handleOnChange={(selected) => {\r\n                    this.setState({selectedOptions: selected})\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DropdownCheckbox;","import React, {Component} from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport '../styles/StrainForm.css';\r\nimport axios from \"axios\";\r\nimport {Form, Col, Row, Button, Modal} from \"react-bootstrap\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport GenesByClusterC from \"./GenesByClusterC\";\r\nimport {serialize} from \"react-awesome-slider/src/helpers/components\";\r\nimport StrainCircosResultsPage from \"../pages/StrainCircosResultsPage\";\r\nimport DropdownCheckbox from \"./DropdownCheckbox\";\r\n\r\n\r\nclass IsolationType extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.ddc = React.createRef();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FadeIn>\r\n                    <DropdownCheckbox ref={this.ddc} options={[\"Clinical\", \"Environment\"]}/>\r\n                </FadeIn>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default IsolationType;","import React, {Component, useEffect, useRef, useState} from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport axios from \"axios\";\r\nimport {TransformWrapper, TransformComponent} from \"react-zoom-pan-pinch\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {ArrowsFullscreen, ZoomIn, ZoomOut} from \"react-bootstrap-icons\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport '../styles/BrowsePage.css';\r\nimport chroma from 'chroma-js';\r\n// import {colourOptions} from '../utilities/colors';\r\nimport Select from 'react-select';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../assets/fonts/YesevaOne-Regular.ttf';\r\nimport MiniDrawer from \"../components/Drawer\";\r\nimport Cluster from \"../components/Cluster\";\r\nimport IsolationType from \"../components/IsolationType\";\r\nimport GenesByClusterC from \"../components/GenesByClusterC\";\r\nimport TextOrFileUpload from \"../components/TextOrFileUpload\";\r\nimport ErrorModalC from \"../components/ErrorModalC\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nvar qs = require('qs');\r\n\r\nclass BrowsePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cluster = React.createRef();\r\n        this.isltype = React.createRef();\r\n        this.childErr = React.createRef();\r\n        this.state = {\r\n            source: [],\r\n            loaded: false,\r\n            textbox: true,\r\n            textOrFile: 'Text Box',\r\n            selectedOption: [],\r\n            selectedFile: {},\r\n            selectedStrains: [],\r\n            isOpen: false,\r\n            generateType: \"defense\",\r\n            checkmlst: false,\r\n            loadedCluster: false,\r\n            colourOptions:{}\r\n        }\r\n    };\r\n\r\n    /*\r\n    load empty phylogenetic tree as default tree\r\n     */\r\n    componentDidMount() {\r\n        Promise.all([axios\r\n            .get(\r\n                \"https://paeruginosite.herokuapp.com/api/v1/strains/phyloTree\",\r\n                {responseType: 'arraybuffer'},\r\n            ),axios\r\n            .get(\r\n                \"https://paeruginosite.herokuapp.com/api/v1/strains/defSystemsColors\"\r\n            )]).then(([response,colors])=>{\r\n            const base64 = btoa(\r\n                new Uint8Array(response.data).reduce(\r\n                    (data, byte) => data + String.fromCharCode(byte),\r\n                    '',\r\n                ),\r\n            );\r\n            this.setState({source: \"data:;base64,\" + base64});\r\n            this.setState({loaded: true});\r\n            this.setState({colourOptions: colors.data});\r\n        }).catch((err) => {\r\n            this.setState({loaded: true})\r\n            console.log(err);\r\n            if (this.childErr.current) {\r\n                this.childErr.current.handleOpen();\r\n            }});\r\n    }\r\n\r\n    /*\r\n    compute a new tree when the user click the button \"generate tree\"\r\n    similar to the orginial function, this time - with query params.\r\n     */\r\n    computeTree = () => {\r\n        this.setState({source: []});\r\n        this.setState({loaded: false});\r\n        this.setState({loadedCluster: false})\r\n        let systems = []\r\n        if (this.state.generateType == \"cluster\") {\r\n            return this.cluster.current.getTree(this.state.selectedFile, this.state.selectedStrains, this.state.checkmlst).then(response => {\r\n                const base64 = btoa(\r\n                    new Uint8Array(response.data).reduce(\r\n                        (data, byte) => data + String.fromCharCode(byte),\r\n                        '',\r\n                    ),\r\n                );\r\n                this.setState({source: \"data:;base64,\" + base64});\r\n                this.setState({loaded: true})\r\n                // this.setState({selectedFile: {}})\r\n                // this.setState({selectedOption: []})\r\n                this.setState({loadedCluster: true})\r\n            }).catch((err) => {\r\n                    this.setState({loaded: true})\r\n                    console.log(err);\r\n                    if (this.childErr.current) {\r\n                        this.childErr.current.handleOpen();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        if (this.state.generateType == \"distinct systems\") {\r\n            let url = \"https://paeruginosite.herokuapp.com/api/v1/defense/distinct_count\";\r\n            return axios\r\n                .get(url, {\r\n                        params: {\r\n                            subtree: this.state.textbox == false ? this.state.selectedFile : this.state.selectedStrains,\r\n                            MLST: this.state.checkmlst\r\n                        },\r\n                        paramsSerializer: function (params) {\r\n                            return qs.stringify(params, {arrayFormat: 'repeat'})\r\n                        },\r\n                        responseType: 'arraybuffer',\r\n                    }\r\n                )\r\n                .then(response => {\r\n                    const base64 = btoa(\r\n                        new Uint8Array(response.data).reduce(\r\n                            (data, byte) => data + String.fromCharCode(byte),\r\n                            '',\r\n                        ),\r\n                    );\r\n                    this.setState({source: \"data:;base64,\" + base64});\r\n                    this.setState({loaded: true})\r\n                }).catch((err) => {\r\n                        this.setState({loaded: true})\r\n                        console.log(err);\r\n                        if (this.childErr.current) {\r\n                            this.childErr.current.handleOpen();\r\n                        }\r\n                    }\r\n                );\r\n        } else {\r\n            let url = \"https://paeruginosite.herokuapp.com/api/v1/strains/phyloTree\"\r\n            if (this.state.generateType == \"isolation\") {\r\n                url = \"https://paeruginosite.herokuapp.com/api/v1/isolation/isolation_tree\"\r\n            }\r\n            return axios\r\n                .get(url, {\r\n                        params: {\r\n                            systems: this.state.selectedOption.map((option) => option.label),\r\n                            subtree: this.state.textbox == false ? this.state.selectedFile : this.state.selectedStrains,\r\n                            MLST: this.state.checkmlst\r\n                        },\r\n                        paramsSerializer: function (params) {\r\n                            return qs.stringify(params, {arrayFormat: 'repeat'})\r\n                        },\r\n                        responseType: 'arraybuffer',\r\n                    }\r\n                )\r\n                .then(response => {\r\n                    const base64 = btoa(\r\n                        new Uint8Array(response.data).reduce(\r\n                            (data, byte) => data + String.fromCharCode(byte),\r\n                            '',\r\n                        ),\r\n                    );\r\n                    this.setState({source: \"data:;base64,\" + base64});\r\n                    this.setState({loaded: true})\r\n                    // this.setState({selectedFile: {}})\r\n                    // this.setState({selectedStrains: []})\r\n                }).catch((err) => {\r\n                        this.setState({loaded: true})\r\n                        console.log(err);\r\n                        if (this.childErr.current) {\r\n                            this.childErr.current.handleOpen();\r\n                        }\r\n                    }\r\n                );\r\n        }\r\n    };\r\n\r\n    /*\r\n    handle file upload and load each line to array of\r\n     integers (aka strain indexes for subtree) for subtree generating\r\n     using selectedFile state.\r\n     */\r\n    onFileChange = e => {\r\n\r\n        // Update the state\r\n        if (e.target.files.length > 0) {\r\n            e.preventDefault()\r\n            const reader = new FileReader()\r\n            reader.onload = async (e) => {\r\n                const text = (e.target.result);\r\n                this.setState({selectedFile: text.split(/\\r?\\n/)});\r\n                e.target.value = null;\r\n            };\r\n            reader.readAsText(e.target.files[0])\r\n        }\r\n\r\n    };\r\n\r\n    /*\r\n    handle the values inserted to autocomplete component and\r\n    saves them in variable of subtree selectedStrains\r\n     */\r\n\r\n    handleTextBox = selected => {\r\n        console.log(selected)\r\n        // Update the state\r\n        if (selected.length > 0) {\r\n            let array = [];\r\n            Object.keys(selected).map((key, index) => (\r\n                array.push(selected[key]['index'])\r\n            ))\r\n            this.setState({selectedStrains: [...array]});\r\n        }\r\n\r\n    };\r\n\r\n    generatingTypeHandler = Gtype => {\r\n        if (Gtype == \"defense\") {\r\n            this.setState({generateType: \"defense\"})\r\n        }\r\n        if (Gtype == \"cluster\") {\r\n            this.setState({generateType: \"cluster\"})\r\n        }\r\n        if (Gtype == \"isolation\") {\r\n            this.setState({generateType: \"isolation\"})\r\n        }\r\n        if (Gtype == \"distinct systems\") {\r\n            this.setState({generateType: \"distinct systems\"}, () => this.computeTree());\r\n        }\r\n    }\r\n\r\n    /*\r\n    update the state of the file upload/strain selection on change\r\n     */\r\n    setSwitchTextBox = data => {\r\n        this.setState({textbox: data});\r\n    }\r\n\r\n\r\n    render() {\r\n        /*\r\n        handles defense systems choice into selectedOptions state and save it.\r\n         */\r\n        const handleChange = selectedOption => {\r\n            if (selectedOption == null) {\r\n                selectedOption = []\r\n            }\r\n            this.setState(\r\n                {selectedOption},\r\n                () => console.log(`Option selected:`, this.state.selectedOption)\r\n            );\r\n        };\r\n\r\n        /*\r\n        color the defense systems options in the autocomplete box.\r\n        also, handles multi value selection in it.\r\n         */\r\n        const colourStyles = {\r\n            control: styles => ({...styles, backgroundColor: 'white'}),\r\n            option: (styles, {data, isDisabled, isFocused, isSelected}) => {\r\n                const color = chroma(data.color);\r\n                return {\r\n                    ...styles,\r\n                    backgroundColor: isDisabled\r\n                        ? null\r\n                        : isSelected\r\n                            ? data.color\r\n                            : isFocused\r\n                                ? color.alpha(0.1).css()\r\n                                : null,\r\n                    color: isDisabled\r\n                        ? '#ccc'\r\n                        : isSelected\r\n                            ? chroma.contrast(color, 'white') > 2\r\n                                ? 'white'\r\n                                : 'black'\r\n                            : data.color,\r\n                    cursor: isDisabled ? 'not-allowed' : 'default',\r\n\r\n                    ':active': {\r\n                        ...styles[':active'],\r\n                        backgroundColor:\r\n                            !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\r\n                    },\r\n                };\r\n            },\r\n            multiValue: (styles, {data}) => {\r\n                const color = chroma(data.color);\r\n                return {\r\n                    ...styles,\r\n                    backgroundColor: color.alpha(0.1).css(),\r\n                };\r\n            },\r\n            multiValueLabel: (styles, {data}) => ({\r\n                ...styles,\r\n                color: data.color,\r\n            }),\r\n            multiValueRemove: (styles, {data}) => ({\r\n                ...styles,\r\n                color: data.color,\r\n                ':hover': {\r\n                    backgroundColor: data.color,\r\n                    color: 'white',\r\n                },\r\n            }),\r\n        };\r\n\r\n        /*\r\n        render choice of drawer into the defense systems/cluster/isolation type\r\n        section and component\r\n         */\r\n        const renderGenerateType = () => {\r\n            if (this.state.generateType == \"defense\") {\r\n                return (\r\n                    <div>\r\n                        <div>Choose the Defense Systems you would like to show:</div>\r\n                        <Select\r\n                            closeMenuOnSelect={false}\r\n                            isMulti\r\n                            options={this.state.colourOptions}\r\n                            styles={colourStyles}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            if (this.state.generateType == \"cluster\") {\r\n                return (\r\n                    <div>\r\n                        <div>Choose the number of genes you would like to show:</div>\r\n                        <Cluster ref={this.cluster}/>\r\n                    </div>)\r\n            }\r\n            if (this.state.generateType == \"isolation\") {\r\n                return (<IsolationType ref={this.isltype}/>)\r\n            } else {\r\n                return (\r\n                    <div>showing the distribution of distinct count of defense systems of each strain across the\r\n                        tree</div>)\r\n            }\r\n        }\r\n\r\n        const setCheckMLST = () => {\r\n            let a = !this.state.checkmlst;\r\n            this.setState({checkmlst: a}, function () {\r\n                console.log(this.state.checkmlst);\r\n            })\r\n        }\r\n\r\n        const downloadCluster = () => {\r\n            if (this.state.generateType == \"cluster\" && this.cluster.current) {\r\n                if (this.state.loadedCluster) {\r\n                    return (\r\n                        // console.log(this.cluster.current)\r\n                        <GenesByClusterC\r\n                            genes={[this.cluster.current.state.selected_geneA, this.cluster.current.state.selected_geneB, this.cluster.current.state.selected_geneC]}/>\r\n                    )\r\n                }\r\n                return (<div></div>)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"mainDiv\">\r\n                <FadeIn>\r\n                    <div className='rowC'>\r\n                        <div className='sidebar'>\r\n                            <div className=\"instructions\">choose a way to upload strains and create subtree:</div>\r\n                            <TextOrFileUpload updateTextbox={this.setSwitchTextBox}\r\n                                              apiUrl=\"https://paeruginosite.herokuapp.com/api/v1/strains/indexes\"\r\n                                              multipleChoice={true}\r\n                                              parentFileChangeCallback={this.onFileChange}\r\n                                              parentHandleTextBox={this.handleTextBox} label=\"Please upload a file that contains a list of strains\r\n                            separated by new lines (/n)\"/>\r\n\r\n                            <Divider/>\r\n                            <br/>\r\n                            <div style={{width: \"95%\", marginLeft: \"5%\"}}>\r\n                                {renderGenerateType()}\r\n                                <br/>\r\n                                <Divider/>\r\n                                <div className='rowC'>\r\n                                    <input style={{marginTop:'2%'}} id='1' type=\"checkbox\" name=\"mlst\" onChange={setCheckMLST}/>\r\n                                    <label style={{paddingLeft: '5%'}} htmlFor='1'> Display MLST across the tree</label>\r\n                                </div>\r\n                                <br/>\r\n                                <Button onClick={() => this.computeTree()} variant=\"outline-primary\"\r\n                                        className='GenerateTree'>Generate Tree</Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='Phylo_Tree'>\r\n                            <TransformWrapper\r\n                                defaultScale={1}\r\n                                defaultPositionX={200}\r\n                                defaultPositionY={100}\r\n                            >\r\n                                {({zoomIn, zoomOut, resetTransform, ...rest}) => (\r\n                                    <React.Fragment>\r\n                                        <div style={{marginLeft: \"40%\"}} className=\"tools\">\r\n                                            <IconButton onClick={zoomIn} color=\"primary\" aria-label=\"upload picture\"\r\n                                                        component=\"span\">\r\n                                                <ZoomIn/>\r\n                                            </IconButton>\r\n                                            <IconButton onClick={zoomOut} color=\"primary\" aria-label=\"upload picture\"\r\n                                                        component=\"span\">\r\n                                                <ZoomOut/>\r\n                                            </IconButton>\r\n                                            <IconButton onClick={resetTransform} color=\"primary\"\r\n                                                        aria-label=\"upload picture\"\r\n                                                        component=\"span\">\r\n                                                <ArrowsFullscreen/>\r\n                                            </IconButton>\r\n                                        </div>\r\n                                        {!this.state.loaded && (\r\n                                            <div style={{marginLeft: \"45%\"}}><Spinner animation=\"border\"\r\n                                                                                      variant=\"primary\"/>\r\n                                            </div>)}\r\n                                        <TransformComponent>\r\n\r\n\r\n                                            <img style={{\r\n                                                height: \"100%\",\r\n                                                width: \"100%\",\r\n                                            }}\r\n                                                 src={this.state.source}/>\r\n                                        </TransformComponent>\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </TransformWrapper>\r\n                            {downloadCluster()}\r\n                            <div id=\"drawer\">\r\n                                <MiniDrawer generatingTypeHandler={this.generatingTypeHandler}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </FadeIn>\r\n                <ErrorModalC open={false} ref={this.childErr}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BrowsePage;\r\n\r\n","import React, { Component } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport '../styles/StrainForm.css';\r\nimport axios from \"axios\";\r\nimport {Form, Col, Row, Button, Modal} from \"react-bootstrap\";\r\nimport AutocompleteC from \"../components/AutocompleteC\";\r\nimport TextOrFileUpload from \"./TextOrFileUpload\";\r\nimport ErrorModalC from \"./ErrorModalC\";\r\nfunction sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\nexport default function StrainForm() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n    const [checkedAll, setCheckedAll] = React.useState(false);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [selectedA, setSelectedA] = React.useState(false);\r\n    const [checked, setChecked] = React.useState({\r\n        genomic_accession: true,\r\n        start_g: true,\r\n        end_g: true,\r\n        strand: true,\r\n        attributes_x: true,\r\n        product_accession: true,\r\n        nonredundant_refseq: true,\r\n        name: true\r\n    });\r\n    const childErr = React.createRef();\r\n\r\n    /* ################################################ */\r\n    /* #### TOGGLES checK STATE BASED ON inputName #### */\r\n    /* ################################################ */\r\n\r\n    const toggleCheck = (inputName) => {\r\n        setChecked((prevState) => {\r\n            const newState = { ...prevState };\r\n            newState[inputName] = !prevState[inputName];\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    /* ###################################################### */\r\n    /* #### CHECKS OR UNCHECKS ALL FROM SELECT ALL CLICK #### */\r\n    /* ###################################################### */\r\n\r\n    const selectAll = (value) => {\r\n        setCheckedAll(value);\r\n        setChecked((prevState) => {\r\n            const newState = { ...prevState };\r\n            for (const inputName in newState) {\r\n                newState[inputName] = value;\r\n            }\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    /* ############################################# */\r\n    /* #### EFFECT TO CONTROL CHECKED_ALL STATE #### */\r\n    /* ############################################# */\r\n\r\n    // IF YOU CHECK BOTH INDIVIDUALLY. IT WILL ACTIVATE THE checkedAll STATE\r\n    // IF YOU UNCHECK ANY INDIVIDUALLY. IT WILL DE-ACTIVATE THE checkAll STATE\r\n\r\n    React.useEffect(() => {\r\n        let allChecked = true;\r\n        for (const inputName in checked) {\r\n            if (checked[inputName] === false) {\r\n                allChecked = false;\r\n            }\r\n        }\r\n        if (allChecked) {\r\n            setCheckedAll(true);\r\n        } else {\r\n            setCheckedAll(false);\r\n        }\r\n    }, [checked]);\r\n\r\n    /* ########################## */\r\n    /* #### RETURN STATEMENT #### */\r\n    /* ########################## */\r\n\r\n\r\n\r\n\r\n    function getData() {\r\n\r\n        let selectedC = [];\r\n\r\n        for (let key in checked) {\r\n            // check if the property/key is defined in the object itself, not in parent\r\n            if(checked[key] == true)\r\n                selectedC.push(key)\r\n        }\r\n\r\n        let selectedAS=[];\r\n        if(Array.isArray(selectedA)) {\r\n            for (let key in selectedA) {\r\n                selectedAS.push(selectedA[key]['key'])\r\n            }\r\n        }else{\r\n            selectedAS.push(selectedA['key']);\r\n        }\r\n\r\n        if(selectedC.length == 0){\r\n            setModalShow(true)\r\n            return;\r\n        }\r\n\r\n\r\n        console.log(selectedAS)\r\n        // console.log(selectedC)\r\n\r\n\r\n        const FileDownload = require('js-file-download');\r\n\r\n        const Qs = require('qs')\r\n\r\n        let params = { selectedC: selectedC, selectedAS: selectedAS }\r\n\r\n        let myAxios = axios.create({\r\n            paramsSerializer: params => Qs.stringify(params, {arrayFormat: 'repeat'})\r\n        })\r\n            myAxios.get('https://paeruginosite.herokuapp.com/api/v1/genes/download_genes', {params})\r\n                .then((res) => {\r\n                    FileDownload(res.data, 'report.csv');\r\n                }).catch(function (error) {childErr.current.handleOpen()});\r\n    }\r\n\r\n\r\n    function MyVerticallyCenteredModal(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Missing Information\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Select a field</h4>\r\n                    <p>\r\n                        Please select at least one of the fields from the list.\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Ok</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    const getSelected = (selected) => {\r\n        setSelectedA(selected)\r\n    }\r\n\r\n    /*\r\nhandle file upload and load each line to array of\r\nintegers (aka strain indexes for subtree) for subtree generating\r\nusing selectedFile state.\r\n*/\r\n    const onFileChange = (e) => {\r\n\r\n        // Update the state\r\n        if (e.target.files.length > 0) {\r\n            e.preventDefault()\r\n            const reader = new FileReader()\r\n            console.log(e)\r\n            reader.onload = async (e) => {\r\n                const text = (e.target.result);\r\n                let ts = text.split(/\\r?\\n/);\r\n                let selectedAS=[];\r\n                let id = 0;\r\n                for (let key in ts) {\r\n                    selectedAS.push({'name':ts[key], 'id': id});\r\n                    id++;\r\n                    // selectedAS[key]['name'].push(ts[key]['name'])\r\n                }\r\n\r\n\r\n                setSelectedA(selectedAS)\r\n                // this.setState({selectedFile: text.split(/\\r?\\n/)});\r\n                e.target.value = null;\r\n            };\r\n            reader.readAsText(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    return (\r\n            <div >\r\n                <FadeIn>\r\n                        <MyVerticallyCenteredModal\r\n                            show={modalShow}\r\n                            onHide={() => setModalShow(false)}\r\n                        />\r\n                    <Form>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label className=\"wrapper\" column sm=\"4\">\r\n                                <p style={{textAlign: \"right\"}}></p>\r\n                            </Form.Label>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"selectStrain\">\r\n                            <Form.Label className=\"wrapper\" column sm=\"4\">\r\n                                <p style={{textAlign: \"right\"}}>{\"Select single/multiple strain/s:\"}</p>\r\n                            </Form.Label>\r\n\r\n                            <Col sm=\"4\">\r\n                                {/*<AutocompleteC multipleChoice={true} true parentCallback={getSelected} apiUrl=\"https://paeruginosite.herokuapp.com/api/v1/strains\"/>*/}\r\n                                <TextOrFileUpload className=\"txtbox\" apiUrl=\"https://paeruginosite.herokuapp.com/api/v1/strains\" multipleChoice={true} parentFileChangeCallback={onFileChange} parentHandleTextBox={getSelected} label=\"Please upload a file that contains a list of strains\r\n                            separated by new lines (/n)\" />\r\n                                <h6 className=\"note\"><i>Note: Not selecting a strain will return <b>all the genes in the database.</b></i></h6>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <div className=\"chkbxs\">\r\n                            Columns:\r\n                        <div>\r\n                            <br/>\r\n                            <input\r\n                                id=\"all\"\r\n                                type=\"checkbox\"\r\n                                onChange={(event) => selectAll(event.target.checked)}\r\n                                checked={checkedAll}\r\n                            />\r\n                            <label for=\"all\" className=\"lbl\">All</label>\r\n                        </div>\r\n\r\n                            <input id='2' type=\"checkbox\" name=\"genomic_accession\"\r\n                                   onChange={() => toggleCheck(\"genomic_accession\")}\r\n                                   checked={checked[\"genomic_accession\"]}/>\r\n                            <label htmlFor='2' className=\"lbl\">genomic_accession</label>\r\n\r\n                            <input id='3' type=\"checkbox\" name=\"start_g\" onChange={() => toggleCheck(\"start_g\")}\r\n                                   checked={checked[\"start_g\"]}/>\r\n                            <label htmlFor='3' className=\"lbl\">start_g</label>\r\n\r\n                            <input id='4' type=\"checkbox\" name=\"end_g\" onChange={() => toggleCheck(\"end_g\")}\r\n                                   checked={checked[\"end_g\"]}/>\r\n                            <label htmlFor='4' className=\"lbl\">end_g</label>\r\n\r\n                            <input id='5' type=\"checkbox\" name=\"strand\" onChange={() => toggleCheck(\"strand\")}\r\n                                   checked={checked[\"strand\"]}/>\r\n                            <label htmlFor='5' className=\"lbl\">strand</label>\r\n\r\n                            <input id='6' type=\"checkbox\" name=\"attributes_x\"\r\n                                   onChange={() => toggleCheck(\"attributes_x\")} checked={checked[\"attributes_x\"]}/>\r\n                            <label htmlFor='6' className=\"lbl\">attributes_x</label>\r\n\r\n                            <input id='7' type=\"checkbox\" name=\"product_accession\"\r\n                                   onChange={() => toggleCheck(\"product_accession\")}\r\n                                   checked={checked[\"product_accession\"]}/>\r\n                            <label htmlFor='7' className=\"lbl\">product_accession</label>\r\n\r\n                            <input id='8' type=\"checkbox\" name=\"nonredundant_refseq\"\r\n                                   onChange={() => toggleCheck(\"nonredundant_refseq\")}\r\n                                   checked={checked[\"nonredundant_refseq\"]}/>\r\n                            <label htmlFor='8' className=\"lbl\">nonredundant_refseq</label>\r\n\r\n                            <input id='9' type=\"checkbox\" name=\"name\" onChange={() => toggleCheck(\"name\")}\r\n                                   checked={checked[\"name\"]}/>\r\n                            <label htmlFor='9' className=\"lbl\">name</label>\r\n\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{textAlign: \"center\"}}>\r\n                            <Button onClick={getData}>Download</Button>\r\n                        </div>\r\n                    </Form>\r\n                    {/*<Modal show={show} onHide={handleClose}>*/}\r\n                    {/*    <Modal.Header closeButton>*/}\r\n                    {/*        <Modal.Title>Modal heading</Modal.Title>*/}\r\n                    {/*    </Modal.Header>*/}\r\n                    {/*    <Modal.Body>There is a problem with the server request. Sorry for the inconvenience.</Modal.Body>*/}\r\n                    {/*    <Modal.Footer>*/}\r\n                    {/*        <Button variant=\"secondary\" onClick={handleClose}>*/}\r\n                    {/*            Close*/}\r\n                    {/*        </Button>*/}\r\n                    {/*    </Modal.Footer>*/}\r\n                    {/*</Modal>*/}\r\n                </FadeIn>\r\n                <ErrorModalC open={false} ref={childErr}/>\r\n            </div>\r\n        )\r\n    }","import React, {Component} from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport '../styles/StrainForm.css';\r\nimport axios from \"axios\";\r\nimport {Form, Col, Row, Button, Modal} from \"react-bootstrap\";\r\nimport TextOrFileUpload from \"../components/TextOrFileUpload\";\r\nimport AutocompleteC from \"../components/AutocompleteC\";\r\nimport ErrorModalC from \"./ErrorModalC\";\r\n\r\nfunction sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\nexport default function GenesByDefenseForm() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n    const [checkedAll, setCheckedAll] = React.useState(false);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [selectedA, setSelectedA] = React.useState(false);\r\n    const [checked, setChecked] = React.useState({\r\n        // locus_tag: true,\r\n        genomic_accession: true,\r\n        start_g: true,\r\n        end_g: true,\r\n        strand: true,\r\n        attributes_x: true,\r\n        product_accession: true,\r\n        nonredundant_refseq: true,\r\n        name: true\r\n    });\r\n    const childErr = React.createRef();\r\n\r\n    /* ################################################ */\r\n    /* #### TOGGLES checK STATE BASED ON inputName #### */\r\n    /* ################################################ */\r\n\r\n    const toggleCheck = (inputName) => {\r\n        setChecked((prevState) => {\r\n            const newState = {...prevState};\r\n            newState[inputName] = !prevState[inputName];\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    /* ###################################################### */\r\n    /* #### CHECKS OR UNCHECKS ALL FROM SELECT ALL CLICK #### */\r\n    /* ###################################################### */\r\n\r\n    const selectAll = (value) => {\r\n        setCheckedAll(value);\r\n        setChecked((prevState) => {\r\n            const newState = {...prevState};\r\n            for (const inputName in newState) {\r\n                newState[inputName] = value;\r\n            }\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    /* ############################################# */\r\n    /* #### EFFECT TO CONTROL CHECKED_ALL STATE #### */\r\n    /* ############################################# */\r\n\r\n    // IF YOU CHECK BOTH INDIVIDUALLY. IT WILL ACTIVATE THE checkedAll STATE\r\n    // IF YOU UNCHECK ANY INDIVIDUALLY. IT WILL DE-ACTIVATE THE checkAll STATE\r\n\r\n    React.useEffect(() => {\r\n        let allChecked = true;\r\n        for (const inputName in checked) {\r\n            if (checked[inputName] === false) {\r\n                allChecked = false;\r\n            }\r\n        }\r\n        if (allChecked) {\r\n            setCheckedAll(true);\r\n        } else {\r\n            setCheckedAll(false);\r\n        }\r\n    }, [checked]);\r\n\r\n    /* ########################## */\r\n    /* #### RETURN STATEMENT #### */\r\n\r\n    /* ########################## */\r\n\r\n\r\n    function getData() {\r\n\r\n        let selectedC = [];\r\n\r\n        for (let key in checked) {\r\n            // check if the property/key is defined in the object itself, not in parent\r\n            if (checked[key] == true)\r\n                selectedC.push(key)\r\n        }\r\n\r\n        let selectedAS = [];\r\n        if (Array.isArray(selectedA)) {\r\n            for (let key in selectedA) {\r\n                selectedAS.push(selectedA[key]['name'])\r\n            }\r\n        } else {\r\n            selectedAS.push(selectedA['name']);\r\n        }\r\n\r\n        if (selectedC.length == 0) {\r\n            setModalShow(true)\r\n            return;\r\n        }\r\n\r\n\r\n        console.log(selectedAS)\r\n        // console.log(selectedC)\r\n\r\n\r\n        const FileDownload = require('js-file-download');\r\n\r\n        const Qs = require('qs')\r\n\r\n        let params = {selectedC: selectedC, selectedAS: selectedAS}\r\n\r\n        let myAxios = axios.create({\r\n            paramsSerializer: params => Qs.stringify(params, {arrayFormat: 'repeat'})\r\n        })\r\n\r\n        myAxios.get('https://paeruginosite.herokuapp.com/api/v1/genes/genes_by_defense', {params})\r\n            .then((res) => {\r\n                FileDownload(res.data, 'genes_by_defense.csv');\r\n            }).catch(function (error) {childErr.current.handleOpen()});\r\n\r\n\r\n    }\r\n\r\n\r\n    function MyVerticallyCenteredModal(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Missing Information\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Select a field</h4>\r\n                    <p>\r\n                        Please select at least one of the fields from the list.\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Ok</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    const getSelected = (selected) => {\r\n        setSelectedA(selected)\r\n    }\r\n\r\n    const getSelectedLength = () => {\r\n        return selectedA.length;\r\n    }\r\n\r\n    /*\r\nhandle file upload and load each line to array of\r\n integers (aka strain indexes for subtree) for subtree generating\r\n using selectedFile state.\r\n */\r\n    const onFileChange = (e) => {\r\n\r\n        // Update the state\r\n        if (e.target.files.length > 0) {\r\n            e.preventDefault()\r\n            const reader = new FileReader()\r\n            console.log(e)\r\n            reader.onload = async (e) => {\r\n                const text = (e.target.result);\r\n                let ts = text.split(/\\r?\\n/);\r\n                let selectedAS = [];\r\n                let id = 0;\r\n                for (let key in ts) {\r\n                    selectedAS.push({'name': ts[key], 'id': id});\r\n                    id++;\r\n                    // selectedAS[key]['name'].push(ts[key]['name'])\r\n                }\r\n\r\n\r\n                setSelectedA(selectedAS)\r\n                // this.setState({selectedFile: text.split(/\\r?\\n/)});\r\n                e.target.value = null;\r\n            };\r\n            reader.readAsText(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n            />\r\n            <Form>\r\n                <br/>\r\n                <Form.Group as={Row} controlId=\"selectStrain\">\r\n                    <Form.Label className=\"wrapper\" column sm=\"4\">\r\n                        <p style={{textAlign: \"right\"}}>{\"Select single/multiple defense system/s:\"}</p>\r\n                    </Form.Label>\r\n\r\n                    <Col sm=\"4\">\r\n                        {/*<AutocompleteC multipleChoice={true} true parentCallback={getSelected} apiUrl=\"https://paeruginosite.herokuapp.com/api/v1/cluster/get_defense_system_names\"/>*/}\r\n                        <TextOrFileUpload apiUrl=\"https://paeruginosite.herokuapp.com/api/v1/defense/\"\r\n                                          multipleChoice={true} parentFileChangeCallback={onFileChange}\r\n                                          parentHandleTextBox={getSelected} label=\"Please upload a file that contains a list of defense systems separated by new lines (/n)\"\r\n                        /><h6 className=\"note\"><i>Note: Not selecting a defense system will return <b>all the genes in the database.</b></i></h6>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n\r\n                <div className=\"chkbxs\">\r\n                    Columns:\r\n                    <div>\r\n                        <br/>\r\n                        <input\r\n                            id=\"all2\"\r\n                            type=\"checkbox\"\r\n                            onChange={(event) => selectAll(event.target.checked)}\r\n                            checked={checkedAll}\r\n                        />\r\n                        <label for=\"all2\" className=\"lbl\">All</label>\r\n                    </div>\r\n\r\n                    {/*<label for=\"1\" className=\"lbl\">locus_tag</label>*/}\r\n                    {/*<input id='1' type=\"checkbox\" name=\"locus_tag\" onChange={() => toggleCheck(\"locus_tag\")} checked={checked[\"locus_tag\"]}/>*/}\r\n\r\n                    <input id='22' type=\"checkbox\" name=\"genomic_accession\"\r\n                           onChange={() => toggleCheck(\"genomic_accession\")} checked={checked[\"genomic_accession\"]}/>\r\n                    <label for='22' className=\"lbl\">genomic_accession</label>\r\n\r\n                    <input id='32' type=\"checkbox\" name=\"start_g\" onChange={() => toggleCheck(\"start_g\")}\r\n                           checked={checked[\"start_g\"]}/>\r\n                    <label for='32' className=\"lbl\">start_g</label>\r\n\r\n                    <input id='42' type=\"checkbox\" name=\"end_g\" onChange={() => toggleCheck(\"end_g\")}\r\n                           checked={checked[\"end_g\"]}/>\r\n                    <label htmlFor='42' className=\"lbl\">end_g</label>\r\n\r\n                    <input id='52' type=\"checkbox\" name=\"strand\" onChange={() => toggleCheck(\"strand\")}\r\n                           checked={checked[\"strand\"]}/>\r\n                    <label htmlFor='52' className=\"lbl\">strand</label>\r\n\r\n                    <input id='62' type=\"checkbox\" name=\"attributes_x\" onChange={() => toggleCheck(\"attributes_x\")}\r\n                           checked={checked[\"attributes_x\"]}/>\r\n                    <label htmlFor='62' className=\"lbl\">attributes_x</label>\r\n\r\n                    <input id='72' type=\"checkbox\" name=\"product_accession\"\r\n                           onChange={() => toggleCheck(\"product_accession\")} checked={checked[\"product_accession\"]}/>\r\n                    <label htmlFor='72' className=\"lbl\">product_accession</label>\r\n\r\n                    <input id='82' type=\"checkbox\" name=\"nonredundant_refseq\"\r\n                           onChange={() => toggleCheck(\"nonredundant_refseq\")}\r\n                           checked={checked[\"nonredundant_refseq\"]}/>\r\n                    <label htmlFor='82' className=\"lbl\">nonredundant_refseq</label>\r\n\r\n                    <input id='92' type=\"checkbox\" name=\"name\" onChange={() => toggleCheck(\"name\")}\r\n                           checked={checked[\"name\"]}/>\r\n                    <label htmlFor='92' className=\"lbl\">name</label>\r\n\r\n                    {/*<label htmlFor='10' className=\"lbl\">name_y</label>*/}\r\n                    {/*<input id='10' type=\"checkbox\" name=\"name_y\" onChange={() => toggleCheck(\"name_y\")} checked={checked[\"name_y\"]}/>*/}\r\n                    {/*<label htmlFor='11' className=\"lbl\">symbol_y</label>*/}\r\n                    {/*<input id='11' type=\"checkbox\" name=\"symbol_y\" onChange={() => toggleCheck(\"symbol_y\")} checked={checked[\"symbol_y\"]}/>*/}\r\n                    {/*<label htmlFor='12' className=\"lbl\">geneid_y</label>*/}\r\n                    {/*<input id='12' type=\"checkbox\" name=\"geneID_y\" onChange={() => toggleCheck(\"geneID_y\")} checked={checked[\"geneID_y\"]}/>*/}\r\n                    {/*<label htmlFor='13' className=\"lbl\"> product_length_y</label>*/}\r\n                    {/*<input id='13' type=\"checkbox\" name=\"product_length_y\" onChange={() => toggleCheck(\"product_length_y\")} checked={checked[\"product_length_y\"]}/>*/}\r\n                    {/*<label htmlFor='14' className=\"lbl\"> protein_sequence</label>*/}\r\n                    {/*<input id='14' type=\"checkbox\" name=\"protein_sequence\" onChange={() => toggleCheck(\"protein_sequence\")} checked={checked[\"protein_sequence\"]}/>*/}\r\n                    {/*<label htmlFor='15' className=\"lbl\"> dna_sequence</label>*/}\r\n                    {/*<input id='15' type=\"checkbox\" name=\"dna_sequence\" onChange={() => toggleCheck(\"dna_sequence\")} checked={checked[\"dna_sequence\"]}/>*/}\r\n                </div>\r\n                <br/>\r\n                <div style={{textAlign: \"center\"}}>\r\n                    <Button onClick={getData}>Download</Button>\r\n                </div>\r\n            </Form>\r\n            <ErrorModalC open={false} ref={childErr}/>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport '../styles/SearchPage.css';\r\nimport {Form, Col, Row, Tab, Nav} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport StrainForm from \"../components/StrainForm\"\r\nimport GenesByClusterC from \"../components/GenesByClusterC\";\r\nimport GenesByDefenseForm from \"../components/GenesByDefenseForm\";\r\n\r\nexport default function DownloadPage() {\r\n\r\n    return (\r\n                    <div style={{textAlign: \"center\"}}>\r\n\r\n                        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                            <Row>\r\n                                <Col sm={3}>\r\n                                    <Nav variant=\"pills\" className=\"flex-column\">\r\n                                        <Nav.Item>\r\n                                            <Nav.Link eventKey=\"first\">Genes by Strain/s</Nav.Link>\r\n                                        </Nav.Item>\r\n                                        <Nav.Item>\r\n                                            <Nav.Link eventKey=\"second\">Genes by Defense System/s</Nav.Link>\r\n                                        </Nav.Item>\r\n                                    </Nav>\r\n                                </Col>\r\n                                <Col sm={9}>\r\n                                    <Tab.Content>\r\n                                        <Tab.Pane eventKey=\"first\">\r\n                                            <StrainForm/>\r\n                                        </Tab.Pane>\r\n                                        <Tab.Pane eventKey=\"second\">\r\n                                            <GenesByDefenseForm/>\r\n                                        </Tab.Pane>\r\n                                    </Tab.Content>\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab.Container>\r\n                    </div>\r\n    );\r\n}\r\n\r\n","import {CanvasJSChart} from 'canvasjs-react-charts'\r\nvar React = require('react');\r\nvar Component = React.Component;\r\n\r\nclass CorrelationBoxPlot extends Component {\r\n    render() {\r\n        const options = {\r\n            theme: \"light2\",\r\n            animationEnabled: true,\r\n            axisY: {\r\n                title: \"Distribution\"\r\n            },\r\n            data: [{\r\n                type: \"boxAndWhisker\",\r\n                // yValueFormatString: \"#,##0.# \\\"kcal/100g\\\"\",\r\n                dataPoints: [\r\n                    { label: \"WithDef\",  y: this.props.withd_y },\r\n                    { label: \"WithoutDef\",  y: this.props.withoutd_y }\r\n                ]\r\n            }]\r\n        }\r\n        return (\r\n            <div>\r\n                <CanvasJSChart options = {options}\r\n                    /* onRef={ref => this.chart = ref} */\r\n                />\r\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CorrelationBoxPlot;\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4plugins_venn from \"@amcharts/amcharts4/plugins/venn\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport '../styles/CorrelationGraph.css';\r\nimport './CorrelationComponents/Correlations.css'\r\nimport ErrorModalC from \"./ErrorModalC\";\r\nimport CorrelationBoxPlot from \"./CorrelationBoxPlot\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport {BsShieldShaded, BsFillCaretRightFill} from \"react-icons/bs\";\r\nimport {SiHubspot, SiMicrogenetics} from \"react-icons/si\";\r\nimport {GiDrippingTube} from \"react-icons/gi\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\n\r\nclass CorrelationGraph extends Component {\r\n// export default function CorrelationGraph({itemsSelected, eventK}) {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.childErr = React.createRef();\r\n        this.state = {\r\n            title: \"\",\r\n            results: [],\r\n            itemNames: [],\r\n            withd_y: [],\r\n            without_y: []\r\n        };\r\n\r\n    }\r\n\r\n    // const [results, setResults] = React.useState([]);\r\n    // const [itemNames, setItemNames] = React.useState([]);\r\n    // const childErr = React.createRef();\r\n    //\r\n    //\r\n    // React.useEffect(() => {\r\n    //     if (eventK == 'first') {\r\n    //         const Qs = require('qs')\r\n    //         axios.get('https://paeruginosite.herokuapp.com/api/v1/statistics/correlationBetweenDefenseSystems', {\r\n    //             params: {\r\n    //                 systems: itemsSelected.map((option) => option.name),\r\n    //             },\r\n    //             paramsSerializer: params => {\r\n    //                 return Qs.stringify(params, {arrayFormat: 'repeat'})\r\n    //             },\r\n    //             //responseType: 'arraybuffer'\r\n    //         })\r\n    //             .then(response => {\r\n    //                 setResults(response.data)\r\n    //             })\r\n    //     } else if (eventK == 'second') {\r\n    //\r\n    //     } else if (eventK == 'third') {\r\n    //         const Qs = require('qs')\r\n    //         axios.get('https://paeruginosite.herokuapp.com/api/v1/statistics/correlationBetweenDefenseSystemAndIsolationType', {\r\n    //             params: {\r\n    //                 system: itemsSelected[0].name, isoType: itemsSelected[1].name\r\n    //             },\r\n    //             paramsSerializer: params => {\r\n    //                 return Qs.stringify(params, {arrayFormat: 'repeat'})\r\n    //             },\r\n    //             //responseType: 'arraybuffer'\r\n    //         })\r\n    //             .then(response => {\r\n    //                 setResults(response.data)\r\n    //             })\r\n    //     }\r\n    // }, [itemsSelected]);\r\n    //\r\n    //\r\n    // React.useEffect(() => {\r\n    //\r\n    //     if (!results[0]) {\r\n    //         return undefined;\r\n    //     }\r\n    //\r\n    //     let chart = am4core.create(\"chartdiv\", am4plugins_venn.VennDiagram);\r\n    //\r\n    //     // Create and configure series\r\n    //     let series = chart.series.push(new am4plugins_venn.VennSeries())\r\n    //     series.dataFields.category = \"name\";\r\n    //     series.dataFields.value = \"value\";\r\n    //     series.dataFields.intersections = \"sets\";\r\n    //     series.data = [\r\n    //         {name: itemNames[0], value: results[0]['K']},\r\n    //         {name: itemNames[1], value: results[0]['n']},\r\n    //         {\r\n    //             name: itemNames[0] + \"\\n&\\n\" + itemNames[1],\r\n    //             value: results[0]['k'],\r\n    //             sets: [itemNames[0], itemNames[1]]\r\n    //         }\r\n    //     ];\r\n    //     console.log(series.data);\r\n    // }, [results])\r\n    //\r\n    //\r\n    // React.useEffect(() => {\r\n    //     if (eventK == 'first') {\r\n    //         setItemNames(itemsSelected.map((option) => option.name))\r\n    //     } else if (eventK == 'second') {\r\n    //\r\n    //     } else if (eventK == 'third') {\r\n    //         const items = [itemsSelected[0].name, itemsSelected[1].name]\r\n    //         setItemNames(items, function () {\r\n    //             const Qs = require('qs')\r\n    //             axios.get('https://paeruginosite.herokuapp.com/api/v1/statistics/correlationBetweenDefenseSystemAndIsolationType', {\r\n    //                 params: {\r\n    //                     system: itemsSelected[0].name, isoType: itemsSelected[1].name\r\n    //                 },\r\n    //                 paramsSerializer: params => {\r\n    //                     return Qs.stringify(params, {arrayFormat: 'repeat'})\r\n    //                 },\r\n    //                 //responseType: 'arraybuffer'\r\n    //             })\r\n    //                 .then(response => {\r\n    //                     setResults(response.data)\r\n    //\r\n    //                 }).catch(function (error) {\r\n    //                 if (childErr.current) {\r\n    //                     childErr.current.handleOpen()\r\n    //                 }\r\n    //             });\r\n    //         })\r\n    //     }\r\n    // })\r\n\r\n    componentDidMount() {\r\n        if (this.props.eventK == 'dvd') {\r\n            // this.setState({title: 'Correlation Between:'})\r\n            this.setState({itemNames: this.props.itemsSelected.map((option) => option.name)}, function () {\r\n                const Qs = require('qs')\r\n                axios.get('https://paeruginosite.herokuapp.com/api/v1/statistics/correlationBetweenDefenseSystems', {\r\n                    params: {\r\n                        systems: this.props.itemsSelected.map((option) => option.name),\r\n                    },\r\n                    paramsSerializer: params => {\r\n                        return Qs.stringify(params, {arrayFormat: 'repeat'})\r\n                    },\r\n                    //responseType: 'arraybuffer'\r\n                })\r\n                    .then(response => {\r\n                        this.setState({results: response.data}, function () {\r\n                            // Create chart\r\n                            let chart = am4core.create(\"chartdiv\", am4plugins_venn.VennDiagram);\r\n                            // Create and configure series\r\n                            let series = chart.series.push(new am4plugins_venn.VennSeries())\r\n                            series.dataFields.category = \"name\";\r\n                            series.dataFields.value = \"value\";\r\n                            series.dataFields.intersections = \"sets\";\r\n                            series.data = [\r\n                                {name: this.state.itemNames[0], value: this.state.results[0]['K']},\r\n                                {name: this.state.itemNames[1], value: this.state.results[0]['n']},\r\n                                {\r\n                                    name: this.state.itemNames[0] + \"\\n&\\n\" + this.state.itemNames[1],\r\n                                    value: this.state.results[0]['k'],\r\n                                    sets: [this.state.itemNames[0], this.state.itemNames[1]]\r\n                                }\r\n                            ];\r\n                            console.log(series.data);\r\n                        })\r\n\r\n                    }).catch(function (error) {\r\n                    if (this.childErr.current) {\r\n                        this.childErr.current.handleOpen()\r\n                    }\r\n                });\r\n            })\r\n        } else if (this.props.eventK == 'dvc') {\r\n            const items = [this.props.itemsSelected[0].name, this.props.itemsSelected[1].name]\r\n            this.setState({itemNames: items}, function () {\r\n                const Qs = require('qs')\r\n                axios.get('https://paeruginosite.herokuapp.com/api/v1/statistics/correlationBetweenDefenseSystemAndAttribute', {\r\n                    params: {\r\n                        system: this.props.itemsSelected[0].name, category: this.props.itemsSelected[1].name\r\n                    },\r\n                    paramsSerializer: params => {\r\n                        return Qs.stringify(params, {arrayFormat: 'repeat'})\r\n                    },\r\n                    //responseType: 'arraybuffer'\r\n                })\r\n                    .then(response => {\r\n                        this.setState({withd_y: response.data[1]}, function () {\r\n                            this.setState({without_y: response.data[2]}, function () {\r\n                                this.setState({results: response.data[0]}, function () {\r\n                                    // Create chart\r\n                                    let chart = am4core.create(\"chartdiv\", am4plugins_venn.VennDiagram);\r\n\r\n                                    // Create and configure series\r\n                                    let series = chart.series.push(new am4plugins_venn.VennSeries())\r\n                                    series.dataFields.category = \"name\";\r\n                                    series.dataFields.value = \"value\";\r\n                                    series.dataFields.intersections = \"sets\";\r\n                                    series.data = [\r\n                                        {name: this.state.itemNames[0], value: this.state.results['K']},\r\n                                        {name: this.state.itemNames[1], value: this.state.results['n']},\r\n                                        {\r\n                                            name: this.state.itemNames[0] + \"\\n&\\n\" + this.state.itemNames[1],\r\n                                            value: this.state.results['k'],\r\n                                            sets: [this.state.itemNames[0], this.state.itemNames[1]]\r\n                                        }\r\n\r\n                                    ];\r\n                                    // series.data =  [{ name: \"A\", value: 10 }, { name: \"B\", value: 10 }, { name: \"C\", value: 10 }, { name: \"X\", value: 2, sets: [\"A\", \"B\"] }, { name: \"Y\", value: 2, sets: [\"A\", \"C\"] }, { name: \"Z\", value: 2, sets: [\"B\", \"C\"] }, { name: \"Q\", value: 1, sets: [\"A\", \"B\", \"C\"] }];\r\n                                    console.log(series.data);\r\n                                })\r\n                            })\r\n                        })\r\n                    }).catch(function (error) {\r\n                    // if (this.childErr.current) {\r\n                    //     this.childErr.current.handleOpen()\r\n                    // }\r\n                });\r\n            })\r\n        } else if (this.props.eventK == 'dvi') {\r\n            const items = [this.props.itemsSelected[0].name, this.props.itemsSelected[1].name]\r\n            this.setState({itemNames: items}, function () {\r\n                const Qs = require('qs')\r\n                axios.get('https://paeruginosite.herokuapp.com/api/v1/statistics/correlationBetweenDefenseSystemAndIsolationType', {\r\n                    params: {\r\n                        system: this.props.itemsSelected[0].name, isoType: this.props.itemsSelected[1].name\r\n                    },\r\n                    paramsSerializer: params => {\r\n                        return Qs.stringify(params, {arrayFormat: 'repeat'})\r\n                    },\r\n                    //responseType: 'arraybuffer'\r\n                })\r\n                    .then(response => {\r\n                        this.setState({results: response.data}, function () {\r\n                            // Create chart\r\n                            let chart = am4core.create(\"chartdiv\", am4plugins_venn.VennDiagram);\r\n\r\n                            // Create and configure series\r\n                            let series = chart.series.push(new am4plugins_venn.VennSeries())\r\n                            series.dataFields.category = \"name\";\r\n                            series.dataFields.value = \"value\";\r\n                            series.dataFields.intersections = \"sets\";\r\n                            series.data = [\r\n                                {name: this.state.itemNames[0], value: this.state.results[0]['K']},\r\n                                {name: this.state.itemNames[1], value: this.state.results[0]['n']},\r\n                                {\r\n                                    name: this.state.itemNames[0] + \"\\n&\\n\" + this.state.itemNames[1],\r\n                                    value: this.state.results[0]['k'],\r\n                                    sets: [this.state.itemNames[0], this.state.itemNames[1]]\r\n                                }\r\n\r\n                            ];\r\n                            // series.data =  [{ name: \"A\", value: 10 }, { name: \"B\", value: 10 }, { name: \"C\", value: 10 }, { name: \"X\", value: 2, sets: [\"A\", \"B\"] }, { name: \"Y\", value: 2, sets: [\"A\", \"C\"] }, { name: \"Z\", value: 2, sets: [\"B\", \"C\"] }, { name: \"Q\", value: 1, sets: [\"A\", \"B\", \"C\"] }];\r\n                            console.log(series.data);\r\n                        })\r\n\r\n                    }).catch(function (error) {\r\n                    // if (this.childErr.current) {\r\n                    //     this.childErr.current.handleOpen()\r\n                    // }\r\n                });\r\n            })\r\n        } else if (this.props.eventK == 'dvcl') {\r\n            const items = [this.props.itemsSelected[0].name, this.props.itemsSelected[1].name, this.props.itemsSelected[2].name]\r\n            this.setState({itemNames: items}, function () {\r\n                const Qs = require('qs')\r\n                axios.get('https://paeruginosite.herokuapp.com/api/v1/statistics/correlationBetweenDefenseSystemAndCluster', {\r\n                    params: {\r\n                        system: items[0], strain: items[1], gene: items[2]\r\n                    },\r\n                    paramsSerializer: params => {\r\n                        return Qs.stringify(params, {arrayFormat: 'repeat'})\r\n                    },\r\n                    //responseType: 'arraybuffer'\r\n                })\r\n                    .then(response => {\r\n                        this.setState({results: response.data}, function () {\r\n                            // Create chart\r\n                            let chart = am4core.create(\"chartdiv\", am4plugins_venn.VennDiagram);\r\n\r\n                            // Create and configure series\r\n                            let series = chart.series.push(new am4plugins_venn.VennSeries())\r\n                            series.dataFields.category = \"name\";\r\n                            series.dataFields.value = \"value\";\r\n                            series.dataFields.intersections = \"sets\";\r\n                            series.data = [\r\n                                {name: this.state.itemNames[0], value: this.state.results[0]['K']},\r\n                                {name: this.state.itemNames[1], value: this.state.results[0]['n']},\r\n                                {\r\n                                    name: this.state.itemNames[0] + \"\\n&\\n\" + this.state.itemNames[1],\r\n                                    value: this.state.results[0]['k'],\r\n                                    sets: [this.state.itemNames[0], this.state.itemNames[1]]\r\n                                }\r\n\r\n                            ];\r\n                            // series.data =  [{ name: \"A\", value: 10 }, { name: \"B\", value: 10 }, { name: \"C\", value: 10 }, { name: \"X\", value: 2, sets: [\"A\", \"B\"] }, { name: \"Y\", value: 2, sets: [\"A\", \"C\"] }, { name: \"Z\", value: 2, sets: [\"B\", \"C\"] }, { name: \"Q\", value: 1, sets: [\"A\", \"B\", \"C\"] }];\r\n                            console.log(series.data);\r\n                        })\r\n\r\n                    }).catch(function (error) {\r\n                    // if (this.childErr.current) {\r\n                    //     this.childErr.current.handleOpen()\r\n                    // }\r\n                });\r\n            })\r\n        } else if (this.props.eventK == 'clvi') {\r\n            const items = [this.props.itemsSelected[0].name, this.props.itemsSelected[1].name, this.props.itemsSelected[2].name]\r\n            this.setState({itemNames: items}, function () {\r\n                const Qs = require('qs')\r\n                axios.get('https://paeruginosite.herokuapp.com/api/v1/statistics/correlationBetweenClusterAndIsolationType', {\r\n                    params: {\r\n                        isoType: items[0], strain: items[1], gene: items[2]\r\n                    },\r\n                    paramsSerializer: params => {\r\n                        return Qs.stringify(params, {arrayFormat: 'repeat'})\r\n                    },\r\n                    //responseType: 'arraybuffer'\r\n                })\r\n                    .then(response => {\r\n                        this.setState({results: response.data}, function () {\r\n                            // Create chart\r\n                            let chart = am4core.create(\"chartdiv\", am4plugins_venn.VennDiagram);\r\n\r\n                            // Create and configure series\r\n                            let series = chart.series.push(new am4plugins_venn.VennSeries())\r\n                            series.dataFields.category = \"name\";\r\n                            series.dataFields.value = \"value\";\r\n                            series.dataFields.intersections = \"sets\";\r\n                            series.data = [\r\n                                {name: this.state.itemNames[0], value: this.state.results[0]['K']},\r\n                                {name: this.state.itemNames[1], value: this.state.results[0]['n']},\r\n                                {\r\n                                    name: this.state.itemNames[0] + \"\\n&\\n\" + this.state.itemNames[1],\r\n                                    value: this.state.results[0]['k'],\r\n                                    sets: [this.state.itemNames[0], this.state.itemNames[1]]\r\n                                }\r\n\r\n                            ];\r\n                            // series.data =  [{ name: \"A\", value: 10 }, { name: \"B\", value: 10 }, { name: \"C\", value: 10 }, { name: \"X\", value: 2, sets: [\"A\", \"B\"] }, { name: \"Y\", value: 2, sets: [\"A\", \"C\"] }, { name: \"Z\", value: 2, sets: [\"B\", \"C\"] }, { name: \"Q\", value: 1, sets: [\"A\", \"B\", \"C\"] }];\r\n                            console.log(series.data);\r\n                        })\r\n\r\n                    }).catch(function (error) {\r\n                    // if (this.childErr.current) {\r\n                    //     this.childErr.current.handleOpen()\r\n                    // }\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            {dataField: \"N\", text: \"Number of strains (N)\", sort: false},\r\n            {dataField: \"K\", text: \"Defense System A (K)\", sort: false},\r\n            {dataField: \"n\", text: \"Defense System B (n)\", sort: false},\r\n            {dataField: \"k\", text: \"Intersection (k)\", sort: false},\r\n            {dataField: \"pvalue\", text: \"P-Value\", sort: false}\r\n        ]\r\n\r\n        let getGraph = () => {\r\n            if (this.props.eventK != 'dvc') {\r\n                return (\r\n                    <div>\r\n                        <div id=\"chartdiv\" style={{width: \"100%\", height: \"450px\"}}></div>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div id=\"boxplotdiv\">\r\n                        <CorrelationBoxPlot  withd_y={this.state.withd_y} withoutd_y={this.state.without_y}/>\r\n                        <br/>\r\n                        <br/>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n\r\n        const corrText = () => {\r\n            if (this.props.eventK == 'dvd') {\r\n                return (\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                Defense system:\r\n                            </Col>\r\n                            <Col>\r\n                                Defense system:\r\n                            </Col>\r\n                        </Row> <Row>\r\n                        <Col className=\"col_s\">\r\n                            <ListItemIcon><BsShieldShaded className=\"icon_s\"/>{this.props.itemsSelected[0].name}\r\n                            </ListItemIcon>\r\n                        </Col>\r\n                        <Col className=\"col_s\">\r\n                            <ListItemIcon><BsShieldShaded className=\"icon_s\"/>{this.props.itemsSelected[1].name}\r\n                            </ListItemIcon>\r\n                        </Col>\r\n                    </Row>\r\n                    </Container>\r\n                )\r\n            } else if (this.props.eventK == 'dvc') {\r\n                return (\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                Defense system:\r\n                            </Col>\r\n                            <Col>\r\n                                Attribute:\r\n                            </Col>\r\n                        </Row> <Row>\r\n                        <Col className=\"col_s\">\r\n                            <ListItemIcon><BsShieldShaded className=\"icon_s\"/>{this.props.itemsSelected[0].name}\r\n                            </ListItemIcon>\r\n                        </Col>\r\n                        <Col className=\"col_s\">\r\n                            <ListItemIcon><SiHubspot className=\"icon_s\"/>{this.props.itemsSelected[1].name}\r\n                            </ListItemIcon>\r\n                        </Col>\r\n                    </Row>\r\n                    </Container>\r\n                )\r\n            } else if (this.props.eventK == 'dvi') {\r\n                return (\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                Defense system:\r\n                            </Col>\r\n                            <Col>\r\n                                Isolation Type:\r\n                            </Col>\r\n                        </Row> <Row>\r\n                        <Col className=\"col_s\">\r\n                            <ListItemIcon><BsShieldShaded className=\"icon_s\"/>{this.props.itemsSelected[0].name}\r\n                            </ListItemIcon>\r\n                        </Col>\r\n                        <Col className=\"col_s\">\r\n                            <ListItemIcon><GiDrippingTube className=\"icon_s\"/>{this.props.itemsSelected[1].name}\r\n                            </ListItemIcon>\r\n                        </Col>\r\n                    </Row>\r\n                    </Container>\r\n                )\r\n            }else if (this.props.eventK == 'dvcl') {\r\n                return (\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                Defense system:\r\n                            </Col>\r\n                            <Col>\r\n                                Cluster:\r\n                            </Col>\r\n                        </Row> <Row>\r\n                        <Col className=\"col_s\">\r\n                            <ListItemIcon><BsShieldShaded className=\"icon_s\"/>{this.props.itemsSelected[0].name}\r\n                            </ListItemIcon>\r\n                        </Col>\r\n                        <Col className=\"col_s\">\r\n                            <ListItemIcon><SiMicrogenetics className=\"icon_s\"/>{this.props.itemsSelected[1].name} <BsFillCaretRightFill/> {this.props.itemsSelected[2].name}\r\n                            </ListItemIcon>\r\n                        </Col>\r\n                    </Row>\r\n                    </Container>\r\n                )\r\n            } else{\r\n                return (\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                Isolation Type:\r\n                            </Col>\r\n                            <Col>\r\n                                Cluster:\r\n                            </Col>\r\n                        </Row> <Row>\r\n                        <Col className=\"col_s\">\r\n                            <ListItemIcon><SiMicrogenetics className=\"icon_s\"/>{this.props.itemsSelected[0].name}\r\n                            </ListItemIcon>\r\n                        </Col>\r\n                        <Col className=\"col_s\">\r\n                            <ListItemIcon><GiDrippingTube className=\"icon_s\"/>{this.props.itemsSelected[1].name} <BsFillCaretRightFill/> {this.props.itemsSelected[2].name}\r\n                            </ListItemIcon>\r\n                        </Col>\r\n                    </Row>\r\n                    </Container>\r\n                )\r\n            }\r\n        }\r\n\r\n        const noticeText = () => {\r\n            if (this.props.eventK != 'dvc') {\r\n                return (\r\n                    <h6>Notice: The P-Value is based on the Hypergeometric test.</h6>\r\n                )\r\n            } else{\r\n                return (\r\n                <h6>Notice: The P-Value is based on the Mann-Whitney test.</h6>\r\n                )\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <FadeIn>\r\n\r\n                    <div className=\"title_s\">\r\n                        <h1>Correlation Between:</h1>\r\n                        <br/>\r\n                        {corrText()}\r\n                    </div>\r\n                    {\r\n                        getGraph()\r\n                    }\r\n\r\n                    <div style={{height: \"100%\", width: \"90%\", marginLeft: \"5%\", fontSize: \"14px\"}}>\r\n\r\n                        <ToolkitProvider\r\n                            keyField=\"id\"\r\n                            data={this.state.results}\r\n                            columns={columns}\r\n                        >\r\n                            {\r\n                                props => (\r\n                                    <div>\r\n                                        <BootstrapTable  {...props.baseProps}\r\n                                                         pagination={paginationFactory({\r\n                                                             paginationSize: 1,  // the pagination bar size, default is 5\r\n                                                             //lastPageText: '>>', // the text of last page button\r\n                                                             hideSizePerPage: true, // hide the size per page dropdown\r\n                                                             hidePageListOnlyOnePage: true, // hide pagination bar when only one page, default is false\r\n                                                         })}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </ToolkitProvider>\r\n\r\n\r\n                    </div>\r\n                    {noticeText()}\r\n                </FadeIn>\r\n                <ErrorModalC open={false} ref={this.childErr}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CorrelationGraph;","import React from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport searchlogo from \"../../assets/images/research.png\"\r\nimport {Link} from \"react-router-dom\";\r\nimport AutocompleteC from \"../AutocompleteC\"\r\nimport './Correlations.css'\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport {BsShieldShaded} from \"react-icons/bs\";\r\nimport {SiHubspot} from \"react-icons/si\";\r\n\r\n// calculates the correlation between one defense system to another\r\nexport default function DefVSDef({parentCallback2}) {\r\n    //const [strainVariableName, setStrainVariableName] = React.useState(\"\")\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedA, setSelectedA] = React.useState([]);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n    const [buttonOff, setButtonOff] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    },[loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    React.useEffect(() => {\r\n        if (getSelectedLength() === 2){\r\n            setButtonOff(false)\r\n        }\r\n        else{\r\n            setButtonOff(true)\r\n        }\r\n    }, [selectedA]);\r\n\r\n\r\n    const getSelected = (selected) => {\r\n        setSelectedA(selected)\r\n\r\n    }\r\n\r\n\r\n    const getSelectedLength = () => {\r\n        return selectedA.length;\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n\r\n\r\n\r\n            <FadeIn>\r\n\r\n                <div className=\"title_s\">\r\n                    <h1>Defense System vs Defense System</h1>\r\n                </div>\r\n\r\n                <Form>\r\n\r\n                    <Row >\r\n                        <Col className=\"col_s\">\r\n                            <ListItemIcon><BsShieldShaded/></ListItemIcon>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Group as={Row} controlId=\"selectDefSys\">\r\n                        <Form.Label className=\"wrapper\" column sm=\"4\">\r\n                            <p style={{textAlign: \"right\"}}>Select two different defense systems</p>\r\n                        </Form.Label>\r\n                        <Col sm=\"4\">\r\n                            <AutocompleteC className=\"textBox\" apiUrl='https://paeruginosite.herokuapp.com/api/v1/defense' multipleChoice={true} limit_length={2}\r\n                                           parentCallback={getSelected} parentCallbackLegnth={getSelectedLength} labelText=\"Choose Defense Systems\" ></AutocompleteC>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Button id=\"dvdSearch\" onClick={() => parentCallback2(selectedA)} disabled={buttonOff}>Search</Button>\r\n                    </div>\r\n                </Form>\r\n            </FadeIn>\r\n        </div>\r\n\r\n\r\n    );\r\n}","import React from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport searchlogo from \"../../assets/images/research.png\"\r\nimport {Link} from \"react-router-dom\";\r\nimport AutocompleteC from \"../AutocompleteC\"\r\nimport {faPlusCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {BsShieldShaded} from \"react-icons/bs\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport {SiHubspot} from \"react-icons/si\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport './Correlations.css'\r\nimport {GiDrippingTube} from \"react-icons/gi\";\r\n\r\n// calculates the correlation between one defense system to an ISO Type\r\nexport default function DefVSIsoType({parentCallback2}) {\r\n    //const [strainVariableName, setStrainVariableName] = React.useState(\"\")\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedDF, setSelectedDF] = React.useState([]);\r\n    const [selectedIso, setSelectedIso] = React.useState([]);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n    const [buttonOff, setButtonOff] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    React.useEffect(() => {\r\n        // let arr = selectedDF.concat(selectedIso);\r\n        // setSelected(arr)\r\n        console.log(selectedDF)\r\n        let arr = selectedDF.concat(selectedIso);\r\n        if (arr.length === 2) {\r\n            setButtonOff(false)\r\n        } else {\r\n            setButtonOff(true)\r\n        }\r\n    }, [selectedDF]);\r\n\r\n    React.useEffect(() => {\r\n        // let arr = selectedDF.concat(selectedIso);\r\n        // setSelected(arr)\r\n        console.log(selectedIso)\r\n        let arr = selectedIso.concat(selectedDF);\r\n        if (arr.length === 2) {\r\n            setButtonOff(false)\r\n        } else {\r\n            setButtonOff(true)\r\n        }\r\n    }, [selectedIso]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (getSelected() === 2) {\r\n            setButtonOff(false)\r\n        } else {\r\n            setButtonOff(true)\r\n        }\r\n    }, [selected]);\r\n\r\n\r\n    const getSelectedDF = (selectedA) => {\r\n        if (selectedA) {\r\n            setSelectedDF([selectedA]);\r\n        } else {\r\n            setSelectedDF([]);\r\n        }\r\n    }\r\n\r\n    const getSelectedISO = (selectedA) => {\r\n        if (selectedA) {\r\n            setSelectedIso([selectedA]);\r\n        } else {\r\n            setSelectedIso([]);\r\n        }\r\n    }\r\n\r\n    const getSelected = () => {\r\n        return selected.length;\r\n    }\r\n\r\n    const getSelectedLengthIso = () => {\r\n        return selectedIso.length;\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n            <FadeIn>\r\n                <div className=\"title_s\">\r\n                    <h1>Defense System vs Isolation Type</h1>\r\n                </div>\r\n                <Form>\r\n\r\n\r\n                    {/*<Form.Group as={Row} controlId=\"selectDefSys\">*/}\r\n                    {/*    <Form.Label className=\"wrapper\" column sm=\"4\">*/}\r\n                    {/*        <p style={{textAlign: \"right\"}}>Select two different defense systems</p>*/}\r\n                    {/*    </Form.Label>*/}\r\n                    {/*    <Row>*/}\r\n                    {/*        <Col sm=\"2\">*/}\r\n                    {/*            <AutocompleteC apiUrl='https://paeruginosite.herokuapp.com/api/v1/defense' multipleChoice={false}*/}\r\n                    {/*                           parentCallback={getSelected}></AutocompleteC>*/}\r\n                    {/*        </Col>*/}\r\n                    {/*        &*/}\r\n                    {/*        <Col sm=\"2\">*/}\r\n                    {/*            <AutocompleteC apiUrl='https://paeruginosite.herokuapp.com/api/v1/defense' multipleChoice={false}*/}\r\n                    {/*                           parentCallback={getSelected}></AutocompleteC>*/}\r\n                    {/*        </Col>*/}\r\n                    {/*    </Row>*/}\r\n                    {/*    <Row>*/}\r\n                    {/*        <Col sm=\"2\">*/}\r\n                    {/*            <p style={{textAlign: \"right\"}}>Select two different defense systems</p>*/}\r\n                    {/*        </Col>*/}\r\n                    {/*        <Col sm=\"2\">*/}\r\n                    {/*            <p style={{textAlign: \"right\"}}>Select two different defense systems</p>*/}\r\n                    {/*        </Col>*/}\r\n                    {/*    </Row>*/}\r\n                    {/*</Form.Group>*/}\r\n\r\n                    <Form.Group as={Row} controlId=\"selectDefSys\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col className=\"col_s\">\r\n                                    <ListItemIcon><BsShieldShaded/></ListItemIcon>\r\n                                </Col>\r\n                                <Col className=\"col_s\">\r\n                                    <ListItemIcon><GiDrippingTube/></ListItemIcon>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <p style={{textAlign: \"center\"}}>Select a defense system</p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <p style={{textAlign: \"center\"}}>Select an isolation type</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col><AutocompleteC apiUrl='https://paeruginosite.herokuapp.com/api/v1/defense' multipleChoice={false}\r\n                                                    parentCallback={getSelectedDF}\r\n                                                    labelText=\"Choose a Defense System\"></AutocompleteC></Col><FontAwesomeIcon\r\n                                icon={faPlusCircle}/>\r\n                                <Col><AutocompleteC apiUrl='https://paeruginosite.herokuapp.com/api/v1/isolation/'\r\n                                                    multipleChoice={false}\r\n                                                    parentCallback={getSelectedISO}\r\n                                                    labelText=\"Select an Isolation Type\"></AutocompleteC></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Form.Group>\r\n\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Button id=\"dviSearch\" onClick={() => parentCallback2(selectedDF, selectedIso)}\r\n                                disabled={buttonOff}>Search</Button>\r\n                    </div>\r\n                </Form>\r\n            </FadeIn>\r\n        </div>\r\n\r\n\r\n    );\r\n}","import React, {Component, useState, useRef} from \"react\";\r\nimport CorrelationGraph from \"../components/CorrelationGraph\";\r\nimport DefVSDef from \"../components/CorrelationComponents/DefVSDef\";\r\nimport DefVSIsoType from \"../components/CorrelationComponents/DefVSIsoType\";\r\n\r\nclass CorrelationResultsPage extends Component {\r\n\r\n    state = {source: null};\r\n\r\n\r\n    render() {\r\n        const items = this.props.myArrayVariableName; // The items which were selected by the user in the CorrelationSearchPage\r\n        const eventKey = this.props.eventK; //The current eventkey which were selected by the user in the CorrelationSearchPage\r\n\r\n        console.log(items)\r\n        return(\r\n            <div>\r\n                <CorrelationGraph eventK={eventKey} itemsSelected={items}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CorrelationResultsPage;","import React from \"react\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport {BsShieldShaded} from 'react-icons/bs';\r\nimport {SiMicrogenetics, SiHubspot} from 'react-icons/si';\r\nimport {GiDrippingTube} from 'react-icons/gi';\r\nimport {faPlusCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        // justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function DrawerCorrelation({generatingTypeHandler}) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        if (open == true) {\r\n            setOpen(false)\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Drawer\r\n                PaperProps={{style: {position: 'absolute', height: '83.5%', marginTop: '4.5%'}, width: '70%'}}\r\n                BackdropProps={{style: {position: 'absolute'}}}\r\n                ModalProps={{\r\n                    container: document.getElementById('drawer'),\r\n                    style: {position: 'absolute'}\r\n                }}\r\n                anchor='right'\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerOpen}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                    Choose Display:\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n\r\n                    <ListItem  button key=\"dvd\" id=\"dvd\" onClick={() => generatingTypeHandler(\"dvd\")}>\r\n                        {/*<OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Tooltip!</Tooltip>}>*/}\r\n                            <ListItemIcon>\r\n                                <BsShieldShaded/><BsShieldShaded/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Defense system vs Defense system\"/>\r\n\r\n                    </ListItem>\r\n                    <ListItem button key=\"dvc\" id=\"dvc\" onClick={() => generatingTypeHandler(\"dvc\")}>\r\n                        <ListItemIcon><BsShieldShaded/><SiHubspot/></ListItemIcon>\r\n                        <ListItemText primary=\"Defense system vs Attribute\"/>\r\n                    </ListItem>\r\n                    <ListItem button key=\"dvi\" id=\"dvi\" onClick={() => generatingTypeHandler(\"dvi\")}>\r\n                        <ListItemIcon><BsShieldShaded/><GiDrippingTube/></ListItemIcon>\r\n                        <ListItemText primary=\"Defense system vs Isolation Type\"/>\r\n                    </ListItem>\r\n                    <ListItem button key=\"dvcl\" id=\"dvcl\" onClick={() => generatingTypeHandler(\"dvcl\")}>\r\n                        <ListItemIcon><BsShieldShaded/><SiMicrogenetics/></ListItemIcon>\r\n                        <ListItemText primary=\"Defense system vs Cluster\"/>\r\n                    </ListItem>\r\n                    <ListItem button key=\"clvi\" id=\"clvi\" onClick={() => generatingTypeHandler(\"clvi\")}>\r\n                        <ListItemIcon><SiMicrogenetics/><GiDrippingTube/></ListItemIcon>\r\n                        <ListItemText primary=\"Cluster vs Isolation Type\"/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport searchlogo from \"../../assets/images/research.png\"\r\nimport {Link} from \"react-router-dom\";\r\nimport AutocompleteC from \"../AutocompleteC\"\r\nimport {faPlusCircle, faAngleDoubleDown} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './Correlations.css'\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport {BsShieldShaded} from \"react-icons/bs\";\r\nimport {GiDrippingTube} from \"react-icons/gi\";\r\nimport {SiMicrogenetics} from \"react-icons/si\";\r\n\r\n// calculates the correlation between one defense system to a cluster Type\r\nexport default function DefVSCluster({parentCallback2}) {\r\n    //const [strainVariableName, setStrainVariableName] = React.useState(\"\")\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedDF, setSelectedDF] = React.useState([]);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n    const [buttonOff, setButtonOff] = React.useState(true);\r\n    const [selected_strain, setSelected_strain] = React.useState([]);\r\n    const [selected_gene, setSelected_gene] = React.useState([]);\r\n    const [strains, setStrains] = React.useState([\r\n        {\r\n            name: \"PAO1\",\r\n            id: \"GCF_000006765.1\"\r\n        },\r\n        {\r\n            name: \"PA14\",\r\n            id: \"GCF_000014625.1\"\r\n        }\r\n    ])\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    React.useEffect(() => {\r\n        // let arr = selectedDF.concat(selectedIso);\r\n        // setSelected(arr)\r\n        console.log(selectedDF)\r\n        let arr = selectedDF.concat(selected_gene);\r\n        if (arr.length === 2) {\r\n            setButtonOff(false)\r\n        } else {\r\n            setButtonOff(true)\r\n        }\r\n    }, [selectedDF]);\r\n\r\n    React.useEffect(() => {\r\n        // let arr = selectedDF.concat(selectedIso);\r\n        // setSelected(arr)\r\n        console.log(selected_gene)\r\n        let arr = selected_gene.concat(selectedDF);\r\n        if (arr.length === 2) {\r\n            setButtonOff(false)\r\n        } else {\r\n            setButtonOff(true)\r\n        }\r\n    }, [selected_gene]);\r\n\r\n\r\n    const getSelectedDF = (selectedA) => {\r\n        if (selectedA) {\r\n            setSelectedDF([selectedA]);\r\n        } else {\r\n            setSelectedDF([]);\r\n        }\r\n    }\r\n\r\n    const getSelectedGene = (selectedA) => {\r\n        if (selectedA) {\r\n            setSelected_gene([selectedA]);\r\n        } else {\r\n            setSelected_gene([]);\r\n        }\r\n    }\r\n\r\n\r\n    const choice_strain = (selected) => {\r\n        if (selected != null)\r\n            setSelected_strain(selected)\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n\r\n\r\n\r\n            <FadeIn>\r\n\r\n                <div className=\"title_s\">\r\n                    <h1>Defense System vs Cluster</h1>\r\n                </div>\r\n\r\n                <Form>\r\n\r\n\r\n                    {/*<Form.Group as={Row} controlId=\"selectDefSys\">*/}\r\n                    {/*    <Form.Label className=\"wrapper\" column sm=\"4\">*/}\r\n                    {/*        <p style={{textAlign: \"right\"}}>Select two different defense systems</p>*/}\r\n                    {/*    </Form.Label>*/}\r\n                    {/*    <Row>*/}\r\n                    {/*        <Col sm=\"2\">*/}\r\n                    {/*            <AutocompleteC apiUrl='https://paeruginosite.herokuapp.com/api/v1/defense' multipleChoice={false}*/}\r\n                    {/*                           parentCallback={getSelected}></AutocompleteC>*/}\r\n                    {/*        </Col>*/}\r\n                    {/*        &*/}\r\n                    {/*        <Col sm=\"2\">*/}\r\n                    {/*            <AutocompleteC apiUrl='https://paeruginosite.herokuapp.com/api/v1/defense' multipleChoice={false}*/}\r\n                    {/*                           parentCallback={getSelected}></AutocompleteC>*/}\r\n                    {/*        </Col>*/}\r\n                    {/*    </Row>*/}\r\n                    {/*    <Row>*/}\r\n                    {/*        <Col sm=\"2\">*/}\r\n                    {/*            <p style={{textAlign: \"right\"}}>Select two different defense systems</p>*/}\r\n                    {/*        </Col>*/}\r\n                    {/*        <Col sm=\"2\">*/}\r\n                    {/*            <p style={{textAlign: \"right\"}}>Select two different defense systems</p>*/}\r\n                    {/*        </Col>*/}\r\n                    {/*    </Row>*/}\r\n                    {/*</Form.Group>*/}\r\n\r\n                    <Form.Group as={Row} controlId=\"selectDefSys\">\r\n                        <Container>\r\n\r\n                            <Row >\r\n                                <Col className=\"col_s\">\r\n                                    <ListItemIcon><BsShieldShaded/></ListItemIcon>\r\n                                </Col>\r\n                                <Col className=\"col_s\">\r\n                                    <ListItemIcon><SiMicrogenetics/></ListItemIcon>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <p style={{textAlign: \"center\"}}>Select a defense system</p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <p style={{textAlign: \"center\"}}>Select a strain and a gene</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col><AutocompleteC apiUrl='https://paeruginosite.herokuapp.com/api/v1/defense' multipleChoice={false}\r\n                                                    parentCallback={getSelectedDF}></AutocompleteC></Col><FontAwesomeIcon\r\n                                icon={faPlusCircle}/>\r\n                                <Col>\r\n                                    <Autocomplete\r\n                                        id=\"strains-combo-box\"\r\n                                        labelText=\"Choose a Defense System\"\r\n                                        options={strains}\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        //style={{width: 300}}\r\n                                        onChange={(event, value) => choice_strain(value)}\r\n                                        renderInput={(params) => <TextField {...params} size=\"small\"\r\n                                                                            label=\"Choose Strain\"\r\n                                                                            variant=\"outlined\"/>}\r\n                                    />\r\n                                    <div style={{textAlign: 'center', paddingTop: '7px', paddingBottom: '7px'}}>\r\n                                        <FontAwesomeIcon\r\n                                            icon={faAngleDoubleDown}/>\r\n                                    </div>\r\n                                    <AutocompleteC multipleChoice={false}\r\n                                                   parentCallback={getSelectedGene}\r\n                                                   apiUrl={\"https://paeruginosite.herokuapp.com/api/v1/cluster/get_gene_strain_id/\" + selected_strain.id}\r\n                                                   labelText=\"Choose Gene\"\r\n                                                   disabled={selected_strain == \"\"}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Form.Group>\r\n\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Button id=\"dvclSearch\" onClick={() => parentCallback2(selectedDF, selected_strain, selected_gene)}\r\n                                disabled={buttonOff}>Search</Button>\r\n                    </div>\r\n                </Form>\r\n            </FadeIn>\r\n        </div>\r\n\r\n\r\n    );\r\n}","import React from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport searchlogo from \"../../assets/images/research.png\"\r\nimport {Link} from \"react-router-dom\";\r\nimport AutocompleteC from \"../AutocompleteC\"\r\nimport {faPlusCircle, faAngleDoubleDown} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport {BsShieldShaded} from \"react-icons/bs\";\r\nimport {GiDrippingTube} from \"react-icons/gi\";\r\nimport './Correlations.css'\r\nimport {SiMicrogenetics} from \"react-icons/si\";\r\n\r\n// calculates the correlation between one cluster to an ISO Type\r\nexport default function ClusterVSIsoType({parentCallback2}) {\r\n    //const [strainVariableName, setStrainVariableName] = React.useState(\"\")\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedIso, setSelectedIso] = React.useState([]);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n    const [buttonOff, setButtonOff] = React.useState(true);\r\n    const [selected_strain, setSelected_strain] = React.useState([]);\r\n    const [selected_gene, setSelected_gene] = React.useState([]);\r\n    const [strains, setStrains] = React.useState([\r\n        {\r\n            name: \"PAO1\",\r\n            id: \"GCF_000006765.1\"\r\n        },\r\n        {\r\n            name: \"PA14\",\r\n            id: \"GCF_000014625.1\"\r\n        }\r\n    ])\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    React.useEffect(() => {\r\n        // let arr = selectedDF.concat(selectedIso);\r\n        // setSelected(arr)\r\n        console.log(selectedIso)\r\n        let arr = selectedIso.concat(selected_gene);\r\n        if (arr.length === 2) {\r\n            setButtonOff(false)\r\n        } else {\r\n            setButtonOff(true)\r\n        }\r\n    }, [selectedIso]);\r\n\r\n    React.useEffect(() => {\r\n        // let arr = selectedDF.concat(selectedIso);\r\n        // setSelected(arr)\r\n        console.log(selected_gene)\r\n        let arr = selected_gene.concat(selectedIso);\r\n        if (arr.length === 2) {\r\n            setButtonOff(false)\r\n        } else {\r\n            setButtonOff(true)\r\n        }\r\n    }, [selected_gene]);\r\n\r\n\r\n    const getSelectedIso = (selectedA) => {\r\n        if (selectedA) {\r\n            setSelectedIso([selectedA]);\r\n        } else {\r\n            setSelectedIso([]);\r\n        }\r\n    }\r\n\r\n    const getSelectedGene = (selectedA) => {\r\n        if (selectedA) {\r\n            setSelected_gene([selectedA]);\r\n        } else {\r\n            setSelected_gene([]);\r\n        }\r\n    }\r\n\r\n\r\n    const choice_strain = (selected) => {\r\n        if (selected != null)\r\n            setSelected_strain(selected)\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n\r\n            <FadeIn>\r\n\r\n                <div className=\"title_s\">\r\n                    <h1>Cluster vs Isolation Type</h1>\r\n                </div>\r\n                <Form>\r\n\r\n                    <Form.Group as={Row} controlId=\"selectDefSys\">\r\n                        <Container>\r\n                            <Row >\r\n                                <Col className=\"col_s\">\r\n                                    <ListItemIcon><SiMicrogenetics/></ListItemIcon>\r\n                                </Col>\r\n                                <Col className=\"col_s\">\r\n                                    <ListItemIcon><GiDrippingTube/></ListItemIcon>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <p style={{textAlign: \"center\"}}>Select a strain and a gene</p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <p style={{textAlign: \"center\"}}>Select an isolation type</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Autocomplete\r\n                                        id=\"strains-combo-box\"\r\n                                        options={strains}\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        //style={{width: 300}}\r\n                                        onChange={(event, value) => choice_strain(value)}\r\n                                        renderInput={(params) => <TextField {...params} size=\"small\"\r\n                                                                            label=\"Choose Strain\"\r\n                                                                            variant=\"outlined\"/>}\r\n                                    />\r\n                                    <div style={{textAlign: 'center', paddingTop: '7px', paddingBottom: '7px'}}>\r\n                                        <FontAwesomeIcon\r\n                                            icon={faAngleDoubleDown}/>\r\n                                    </div>\r\n                                    <AutocompleteC multipleChoice={false}\r\n                                                   parentCallback={getSelectedGene}\r\n                                                   apiUrl={\"https://paeruginosite.herokuapp.com/api/v1/cluster/get_gene_strain_id/\" + selected_strain.id}\r\n                                                   labelText=\"Choose Gene\"\r\n                                                   disabled={selected_strain == \"\"}\r\n                                    />\r\n\r\n                                </Col><FontAwesomeIcon\r\n                                icon={faPlusCircle}/>\r\n                                <Col><AutocompleteC apiUrl='https://paeruginosite.herokuapp.com/api/v1/isolation/' multipleChoice={false}\r\n                                                    parentCallback={getSelectedIso} labelText=\"Select an Isolation Type\"></AutocompleteC></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Form.Group>\r\n\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Button id=\"clviSearch\" onClick={() => parentCallback2(selectedIso, selected_strain, selected_gene)}\r\n                                disabled={buttonOff}>Search</Button>\r\n                    </div>\r\n                </Form>\r\n            </FadeIn>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport searchlogo from \"../../assets/images/research.png\"\r\nimport {Link} from \"react-router-dom\";\r\nimport AutocompleteC from \"../AutocompleteC\"\r\nimport {faPlusCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport './Correlations.css'\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport {BsShieldShaded} from \"react-icons/bs\";\r\nimport {SiHubspot, SiMicrogenetics} from \"react-icons/si\";\r\n\r\n// calculates the correlation between one defense system to an ISO Type\r\nexport default function DefVSCat({parentCallback2}) {\r\n    //const [strainVariableName, setStrainVariableName] = React.useState(\"\")\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedDF, setSelectedDF] = React.useState([]);\r\n    const [selectedCls, setSelectedCls] = React.useState([]);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n    const [buttonOff, setButtonOff] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    React.useEffect(() => {\r\n        // let arr = selectedDF.concat(selectedIso);\r\n        // setSelected(arr)\r\n        console.log(selectedDF)\r\n        let arr = selectedDF.concat(selectedCls);\r\n        if (arr.length === 2) {\r\n            setButtonOff(false)\r\n        } else {\r\n            setButtonOff(true)\r\n        }\r\n    }, [selectedDF]);\r\n\r\n    React.useEffect(() => {\r\n        // let arr = selectedDF.concat(selectedIso);\r\n        // setSelected(arr)\r\n        console.log(selectedCls)\r\n        let arr = selectedCls.concat(selectedDF);\r\n        if (arr.length === 2) {\r\n            setButtonOff(false)\r\n        } else {\r\n            setButtonOff(true)\r\n        }\r\n    }, [selectedCls]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (getSelected() === 2) {\r\n            setButtonOff(false)\r\n        } else {\r\n            setButtonOff(true)\r\n        }\r\n    }, [selected]);\r\n\r\n\r\n    const getSelectedDF = (selectedA) => {\r\n        if (selectedA) {\r\n            setSelectedDF([selectedA]);\r\n        } else {\r\n            setSelectedDF([]);\r\n        }\r\n    }\r\n\r\n    const getSelectedCls = (selectedA) => {\r\n        if (selectedA) {\r\n            setSelectedCls([selectedA]);\r\n        } else {\r\n            setSelectedCls([]);\r\n        }\r\n    }\r\n\r\n    const getSelected = () => {\r\n        return selected.length;\r\n    }\r\n\r\n    const getSelectedLengthIso = () => {\r\n        return selectedCls.length;\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n\r\n            <FadeIn>\r\n                <div className=\"title_s\">\r\n                    <h1>Defense System vs Attribute</h1>\r\n                </div>\r\n                <Form>\r\n\r\n                    <Form.Group as={Row} controlId=\"selectDefSys\">\r\n                        <Container>\r\n\r\n                            <Row >\r\n                                <Col className=\"col_s\">\r\n                                    <ListItemIcon><BsShieldShaded/></ListItemIcon>\r\n                                </Col>\r\n                                <Col className=\"col_s\">\r\n                                    <ListItemIcon><SiHubspot/></ListItemIcon>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <p style={{textAlign: \"center\"}}>Select a defense system</p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <p style={{textAlign: \"center\"}}>Select an attribute</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col><AutocompleteC apiUrl='https://paeruginosite.herokuapp.com/api/v1/defense' multipleChoice={false}\r\n                                                    parentCallback={getSelectedDF} labelText=\"Choose a Defense System\"></AutocompleteC></Col><FontAwesomeIcon\r\n                                icon={faPlusCircle}/>\r\n                                <Col><AutocompleteC apiUrl='https://paeruginosite.herokuapp.com/api/v1/isolation/attributes/'\r\n                                                    multipleChoice={false}\r\n                                                    parentCallback={getSelectedCls} labelText=\"Select an attribute\"></AutocompleteC></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Form.Group>\r\n\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Button id=\"dvcSearch\" onClick={() => parentCallback2(selectedDF, selectedCls)}\r\n                                disabled={buttonOff}>Search</Button>\r\n                    </div>\r\n                </Form>\r\n            </FadeIn>\r\n        </div>\r\n\r\n\r\n    );\r\n}","import React from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {Button, Col, Form, Nav, Row, Tab} from \"react-bootstrap\";\r\nimport searchlogo from \"../assets/images/research.png\";\r\nimport {Link} from \"react-router-dom\";\r\nimport DefVSDef from \"../components/CorrelationComponents/DefVSDef\";\r\nimport DefVSIsoType from \"../components/CorrelationComponents/DefVSIsoType\";\r\nimport StrainForm from \"../components/StrainForm\";\r\nimport GenesByClusterC from \"../components/GenesByClusterC\";\r\nimport CorrelationResultsPage from \"./CorrelationResultsPage\";\r\nimport MiniDrawer from \"../components/Drawer\";\r\nimport '../styles/CorrelationSearchPage.css'\r\nimport DrawerCorrelation from \"../components/CorrelationComponents/DrawerCorrelation\";\r\nimport DefVSCluster from \"../components/CorrelationComponents/DefVSCluster\";\r\nimport ClusterVSIsoType from \"../components/CorrelationComponents/ClusterVSIsoType\";\r\nimport DefVSCat from \"../components/CorrelationComponents/DefVSCat\";\r\n\r\n\r\nclass CorrelationSearchPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: false, //flag to show if the result is shown or not\r\n            params: [], //holds the params for the calculations in the result window\r\n            generateType: 'dvd' //holds the current eventKey of the tabs (which tab was selected last)\r\n        };\r\n    };\r\n\r\n    getParams = (params) => {\r\n        this.setState({params: params})\r\n        this.setState({results: true})\r\n    }\r\n\r\n    getTwoParams = (param1, param2) => {\r\n        this.setState({params: [param1[0], param2[0]]})\r\n        this.setState({results: true})\r\n    }\r\n\r\n    getThreeParams = (param1, param2, param3) => {\r\n        this.setState({params: [param1[0], param2, param3[0]]})\r\n        this.setState({results: true})\r\n    }\r\n\r\n    changeResults = () => {\r\n        this.setState({results: false})\r\n    }\r\n\r\n    generatingTypeHandler = Gtype => {\r\n        this.changeResults()\r\n        if (Gtype == \"dvd\") {\r\n            this.setState({generateType: \"dvd\"})\r\n        } else if (Gtype == \"dvc\") {\r\n            this.setState({generateType: \"dvc\"})\r\n        } else if (Gtype == \"dvi\") {\r\n            this.setState({generateType: \"dvi\"})\r\n        } else if (Gtype == \"dvcl\") {\r\n            this.setState({generateType: \"dvcl\"})\r\n        } else {\r\n            this.setState({generateType: \"clvi\"})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        // const currWindow = () => {\r\n        //     if (this.state.results == false) {\r\n        //         let currEvenKey = this.state.key  //holds the current eventKey of the tabs (which tab was selected last)\r\n        //         if (currEvenKey == 'first') {\r\n        //             return (<DefVSDef parentCallback2={this.getParams}/>)\r\n        //         } else if (currEvenKey == 'second') {\r\n        //\r\n        //         } else {\r\n        //             return (<DefVSIsoType parentCallback2={this.getTwoParams}/>)\r\n        //         }\r\n        //     } else {\r\n        //         return (<CorrelationResultsPage eventK={this.state.key} myArrayVariableName={this.state.params}/>)\r\n        //     }\r\n        // }\r\n\r\n        const currWindow = () => {\r\n            if (this.state.results == false) {\r\n                let currEvenKey = this.state.generateType  //holds the current eventKey of the tabs (which tab was selected last)\r\n                if (currEvenKey == 'dvd') {\r\n                    return (<DefVSDef parentCallback2={this.getParams}/>)\r\n                } else if (currEvenKey == 'dvc') {\r\n                    return (<DefVSCat parentCallback2={this.getTwoParams}/>)\r\n                } else if (currEvenKey == 'dvi') {\r\n                    return (<DefVSIsoType parentCallback2={this.getTwoParams}/>)\r\n                } else if (currEvenKey == 'dvcl') {\r\n                    return (<DefVSCluster parentCallback2={this.getThreeParams}/>)\r\n                } else if (currEvenKey == 'clvi') {\r\n                    return (<ClusterVSIsoType parentCallback2={this.getThreeParams}/>)\r\n                }\r\n\r\n            } else {\r\n                return (\r\n                    <CorrelationResultsPage eventK={this.state.generateType} myArrayVariableName={this.state.params}/>)\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                {/*<Tab.Container activeKey={this.state.key} onSelect={(k) => this.setState({key: k})} id=\"left-tabs-example\" defaultActiveKey=\"first\">*/}\r\n                {/*    <h2>Correlation</h2>*/}\r\n                {/*    <Row>*/}\r\n                {/*        <Col sm={2}>*/}\r\n                {/*            <Nav variant=\"pills\" className=\"flex-column\">*/}\r\n                {/*                <Nav.Item>*/}\r\n                {/*                    <Nav.Link onSelect={this.changeResults} eventKey=\"first\">Defense System vs Defense System</Nav.Link>*/}\r\n                {/*                </Nav.Item>*/}\r\n                {/*                <Nav.Item>*/}\r\n                {/*                    <Nav.Link onSelect={this.changeResults}  eventKey=\"second\">Category vs Defense System</Nav.Link>*/}\r\n                {/*                </Nav.Item>*/}\r\n                {/*                <Nav.Item>*/}\r\n                {/*                    <Nav.Link onSelect={this.changeResults}  eventKey=\"third\">Iso Type vs Defense System</Nav.Link>*/}\r\n                {/*                </Nav.Item>*/}\r\n                {/*            </Nav>*/}\r\n                {/*        </Col>*/}\r\n                {/*        <Col sm={10}>*/}\r\n                {/*            <Tab.Content>*/}\r\n                {/*                <Tab.Pane eventKey=\"first\">*/}\r\n                {/*                    {currWindow()}*/}\r\n                {/*                </Tab.Pane>*/}\r\n                {/*                <Tab.Pane eventKey=\"second\">*/}\r\n                {/*                    {currWindow()}*/}\r\n                {/*                </Tab.Pane>*/}\r\n                {/*                <Tab.Pane eventKey=\"third\">*/}\r\n                {/*                    {currWindow()}*/}\r\n                {/*                </Tab.Pane>*/}\r\n                {/*            </Tab.Content>*/}\r\n                {/*        </Col>*/}\r\n                {/*    </Row>*/}\r\n                {/*</Tab.Container>*/}\r\n\r\n                {currWindow()}\r\n\r\n                <div className=\"sidebar\" id=\"drawer\">\r\n                    <DrawerCorrelation generatingTypeHandler={this.generatingTypeHandler}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CorrelationSearchPage;","import React from \"react\";\r\n\r\nimport { line } from \"d3-shape\";\r\n\r\n\r\nfunction Branch(props) {\r\n\r\n    const { xScale, yScale, colorScale, showLabel, setTooltip } = props,\r\n        { source, target } = props.link,\r\n        source_x = xScale(source.data.abstract_x),\r\n        source_y = yScale(source.data.abstract_y),\r\n        target_x = xScale(target.data.abstract_x),\r\n        target_y = yScale(target.data.abstract_y),\r\n        tracer_x2 = props.alignTips == \"right\" ?\r\n            props.width - (target.data.text_width || 0) :\r\n            target_x,\r\n        data = [\r\n            [source_x, source_y],\r\n            [source_x, target_y],\r\n            [target_x, target_y]\r\n        ],\r\n        branch_line = line()\r\n            .x(d=>d[0])\r\n            .y(d=>d[1]),\r\n        computed_branch_styles = props.branchStyler ?\r\n            props.branchStyler(target.data) :\r\n            target.data.annotation && colorScale ? {\r\n                stroke: colorScale(target.data.annotation)\r\n            } : {},\r\n        all_branch_styles = Object.assign(\r\n            {}, props.branchStyle, computed_branch_styles\r\n        ),\r\n        label_style = target.data.name && props.labelStyler ?\r\n            props.labelStyler(target.data) :\r\n            {} ;\r\n    return (<g className=\"node\"\r\n    >\r\n        <path\r\n            className=\"rp-branch\"\r\n            fill=\"none\"\r\n            d={branch_line(data)}\r\n            {...all_branch_styles}\r\n            onMouseMove={props.tooltip ? e => {\r\n                setTooltip({\r\n                    x: e.nativeEvent.offsetX,\r\n                    y: e.nativeEvent.offsetY,\r\n                    data: target.data\r\n                });\r\n            } : undefined}\r\n            onMouseOut={props.tooltip ? e => {\r\n                setTooltip(false);\r\n            } : undefined}\r\n        />\r\n        {showLabel ? <line\r\n            x1={target_x}\r\n            x2={tracer_x2}\r\n            y1={target_y}\r\n            y2={target_y}\r\n            className=\"rp-branch-tracer\"\r\n        /> : null}\r\n        {showLabel ? <text\r\n            x={tracer_x2 + 5}\r\n            y={target_y}\r\n            textAnchor=\"start\"\r\n            alignmentBaseline=\"middle\"\r\n            {...Object.assign({}, props.labelStyle, label_style)}\r\n            className=\"rp-label\"\r\n        >{target.data.name.slice(0, props.maxLabelWidth)}</text> : null}\r\n    </g>);\r\n}\r\n\r\nBranch.defaultProps = {\r\n    branchStyle: {\r\n        strokeWidth: 2,\r\n        stroke: \"grey\"\r\n    },\r\n    labelStyle: {\r\n    }\r\n}\r\n\r\nexport default Branch;","function text_width(text, size, max_width) {\r\n    const width = Math.min(max_width, text.length);\r\n    return width*size*0.60009765625;\r\n}\r\n\r\nexport default text_width;","import React, { useState } from \"react\";\r\nimport { phylotree } from \"phylotree\";\r\nimport { scaleLinear, scaleOrdinal } from \"d3-scale\";\r\nimport { schemeCategory10 } from \"d3-scale-chromatic\";\r\nimport _ from \"underscore\";\r\nimport { AxisTop } from \"d3-react-axis\";\r\nimport { max } from \"d3-array\";\r\n\r\nimport Branch from \"./branch.jsx\";\r\nimport text_width from \"./text_width\";\r\n\r\n\r\nfunction x_branch_lengths(node, accessor) {\r\n    if (!node.parent) return 0;\r\n    const bl = accessor(node);\r\n    return  bl + node.parent.data.abstract_x;\r\n}\r\n\r\nfunction x_no_branch_lengths(node) {\r\n    return node.parent ? node.parent.data.abstract_x + 1 : 0;\r\n}\r\n\r\nfunction default_accessor(node){\r\n    return +node.data.attribute;\r\n}\r\n\r\nfunction sort_nodes (tree, direction) {\r\n    tree.traverse_and_compute (function (n) {\r\n        var d = 1;\r\n        if (n.children && n.children.length) {\r\n            d += max (n.children, function (d) { return d[\"count_depth\"];});\r\n        }\r\n        n[\"count_depth\"] = d;\r\n    });\r\n    const asc = direction == \"ascending\";\r\n    tree.resort_children (function (a,b) {\r\n        return (a[\"count_depth\"] - b[\"count_depth\"]) * (asc ? 1 : -1);\r\n    });\r\n}\r\n\r\nfunction placenodes(tree, perform_internal_layout, accessor, sort) {\r\n    accessor = accessor || default_accessor;\r\n    if(sort) {\r\n        sort_nodes(tree, sort);\r\n    }\r\n    var current_leaf_height = -1,\r\n        unique_id = 0;\r\n    tree.max_x = 0;\r\n    const has_branch_lengths = Boolean(accessor(tree.get_tips()[0])),\r\n        x_branch_length = has_branch_lengths ? x_branch_lengths : x_no_branch_lengths;\r\n    function node_layout(node) {\r\n        if(!node.unique_id) {\r\n            unique_id = node.unique_id = unique_id + 1;\r\n        }\r\n        node.data.abstract_x = x_branch_length(node, accessor);\r\n        tree.max_x = Math.max(tree.max_x, node.data.abstract_x);\r\n        if(node.children) {\r\n            node.data.abstract_y = node.children.map(node_layout)\r\n                .reduce( (a,b) => a + b, 0) / node.children.length;\r\n        } else {\r\n            current_leaf_height = node.data.abstract_y = current_leaf_height+1;\r\n        }\r\n        return node.data.abstract_y;\r\n    }\r\n\r\n    function internal_node_layout(node) {\r\n        unique_id = node.unique_id = unique_id + 1;\r\n        node.data.abstract_x = x_branch_length(node, accessor);\r\n        tree.max_x = Math.max(tree.max_x, node.data.abstract_x);\r\n        if(!tree.is_leafnode(node)) {\r\n            node.children.forEach(internal_node_layout);\r\n        }\r\n        if(!node.data.abstract_y && node.data.name != \"root\") {\r\n            current_leaf_height = node.data.abstract_y = current_leaf_height+1;\r\n            tree.node_order.push(node.data.name);\r\n        }\r\n        if(node.parent && !node.parent.data.abstract_y && node.data.name != \"root\") {\r\n            if(node.parent.data.name != \"root\") {\r\n                current_leaf_height = node.parent.data.abstract_y = current_leaf_height+1;\r\n                tree.node_order.push(node.parent.data.name);\r\n            }\r\n        }\r\n        tree.max_y = Math.max(tree.max_y, current_leaf_height);\r\n    }\r\n\r\n    if(perform_internal_layout) {\r\n        tree.max_y = 0;\r\n        tree.node_order = [];\r\n        internal_node_layout(tree.nodes);\r\n        const root = tree.get_node_by_name(\"root\");\r\n        root.data.abstract_y = root.children.map(child => child.data.abstract_y)\r\n            .reduce((a,b)=>a+b, 0) / root.children.length;\r\n    } else {\r\n        node_layout(tree.nodes);\r\n        tree.max_y = current_leaf_height;\r\n    }\r\n}\r\n\r\n\r\nfunction getColorScale(tree, highlightBranches) {\r\n    if(!highlightBranches) return null;\r\n    if(typeof highlightBranches === \"boolean\") {\r\n        return tree.parsed_tags && highlightBranches ?\r\n            scaleOrdinal().domain(tree.parsed_tags).range(schemeCategory10) :\r\n            null;\r\n    }\r\n    const pairs = _.pairs(highlightBranches);\r\n    return scaleOrdinal()\r\n        .domain(pairs.map(p => p[0]))\r\n        .range(pairs.map(p => p[1]));\r\n}\r\n\r\n\r\nfunction Phylotree(props) {\r\n    const [tooltip, setTooltip] = useState(false);\r\n    const { width, height, maxLabelWidth } = props;\r\n    var{ tree, newick } = props;\r\n    if (!tree && !newick) {\r\n        return <g />;\r\n    } else if(!tree) {\r\n        tree = new phylotree(newick);\r\n    }\r\n    if(!props.skipPlacement) {\r\n        placenodes(tree, props.internalNodeLabels, props.accessor, props.sort);\r\n    }\r\n\r\n    function attachTextWidth(node) {\r\n        node.data.text_width = text_width(node.data.name, 14, maxLabelWidth);\r\n        if(node.children) node.children.forEach(attachTextWidth);\r\n    }\r\n    attachTextWidth(tree.nodes);\r\n    const sorted_tips = tree.get_tips().sort((a,b) => (\r\n        b.data.abstract_x - a.data.abstract_x\r\n    ));\r\n    var rightmost;\r\n    if (!props.showLabels) rightmost = width;\r\n    else {\r\n        for(let i=0; i < sorted_tips.length; i++) {\r\n            let tip = sorted_tips[i];\r\n            rightmost = width - tip.data.text_width;\r\n            let scale = rightmost / tip.data.abstract_x;\r\n            let none_cross = sorted_tips.map(tip => {\r\n                const tip_x = tip.data.abstract_x * scale,\r\n                    text_x = width - tip.data.text_width,\r\n                    this_doesnt_cross = Math.floor(tip_x) < Math.ceil(text_x);\r\n                return this_doesnt_cross;\r\n            }).every(x => x);\r\n            if(none_cross) break;\r\n        }\r\n    }\r\n    const x_scale = scaleLinear()\r\n            .domain([0, tree.max_x])\r\n            .range([0, rightmost]),\r\n        y_scale = scaleLinear()\r\n            .domain([0, tree.max_y])\r\n            .range([props.includeBLAxis ? 60 : 0, height]),\r\n        color_scale = getColorScale(tree, props.highlightBranches);\r\n    return (<g transform={props.transform}>\r\n        {props.includeBLAxis ? <g>\r\n            <text\r\n                x={x_scale(tree.max_x/2)}\r\n                y={10}\r\n                alignmentBaseline='middle'\r\n                textAnchor='middle'\r\n                fontFamily='Courier'\r\n            >\r\n                Substitutions per site\r\n            </text>\r\n            <AxisTop\r\n                transform={`translate(0, 40)`}\r\n                scale={x_scale}\r\n            />\r\n        </g> : null }\r\n        {tree.links.map(link => {\r\n            const source_id = link.source.unique_id,\r\n                target_id = link.target.unique_id,\r\n                key = source_id + \",\" + target_id,\r\n                show_label = props.internalNodeLabels ||\r\n                    (props.showLabels && tree.is_leafnode(link.target));\r\n            return (<Branch\r\n                key={key}\r\n                xScale={x_scale}\r\n                yScale={y_scale}\r\n                colorScale={color_scale}\r\n                link={link}\r\n                showLabel={show_label}\r\n                maxLabelWidth={maxLabelWidth}\r\n                width={width}\r\n                alignTips={props.alignTips}\r\n                branchStyler={props.branchStyler}\r\n                labelStyler={props.labelStyler}\r\n                tooltip={props.tooltip}\r\n                setTooltip={setTooltip}\r\n            />);\r\n        }) }\r\n        { tooltip ? <props.tooltip\r\n            width={props.width}\r\n            height={props.height}\r\n            {...tooltip}\r\n        /> : null }\r\n    </g>);\r\n}\r\n\r\nPhylotree.defaultProps = {\r\n    width: 500,\r\n    height: 500,\r\n    showLabels: true,\r\n    skipPlacement: false,\r\n    maxLabelWidth: 20,\r\n    alignTips: \"right\",\r\n    accessor: default_accessor,\r\n    branchStyler: null,\r\n    labelStyler: null,\r\n    tooltip: null,\r\n    sort: null,\r\n    includeBLAxis: false\r\n};\r\n\r\nexport default Phylotree;\r\nexport {\r\n    placenodes\r\n};","import React, { Component } from \"react\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport RBButton from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faArrowLeft, faArrowUp, faArrowDown, faArrowRight,\r\n    faSortAmountUp, faAlignRight, faAlignLeft\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../styles/PhiloTreeC.css';\r\n\r\nimport Phylotree from \"./phylotreeFolder/phylotree.jsx\";\r\n\r\nimport \"../styles/phylotree.css\";\r\n\r\n\r\nfunction Button(props) {\r\n    return (<OverlayTrigger\r\n        placement=\"top\"\r\n        overlay={<Tooltip>\r\n            {props.title}\r\n        </Tooltip>}\r\n    >\r\n        <RBButton\r\n            variant=\"secondary\"\r\n            {...props}\r\n        >\r\n            {props.children}\r\n        </RBButton>\r\n    </OverlayTrigger>);\r\n}\r\n\r\nfunction HorizontalExpansionButton(props) {\r\n    return (<Button\r\n        style={{ fontSize: 10 }}\r\n        title=\"Expand horizontally\"\r\n        {...props}\r\n    >\r\n        <FontAwesomeIcon key={1} icon={faArrowLeft} />\r\n        <FontAwesomeIcon key={2} icon={faArrowRight} />\r\n    </Button>);\r\n}\r\n\r\nfunction HorizontalCompressionButton(props) {\r\n    return (<Button\r\n        style={{ fontSize: 10 }}\r\n        title=\"Compress horizontally\"\r\n        {...props}\r\n    >\r\n        <FontAwesomeIcon key={1} icon={faArrowRight} />\r\n        <FontAwesomeIcon key={2} icon={faArrowLeft} />\r\n    </Button>);\r\n}\r\n\r\nfunction VerticalExpansionButton(props) {\r\n    return (<Button\r\n        style={{fontSize: 10, display: \"flex\", flexDirection: \"column\"}}\r\n        title=\"Expand vertically\"\r\n        {...props}\r\n    >\r\n        <FontAwesomeIcon key={1} icon={faArrowUp} />\r\n        <FontAwesomeIcon key={2} icon={faArrowDown} />\r\n    </Button>);\r\n}\r\n\r\nfunction VerticalCompressionButton(props) {\r\n    return (<Button\r\n        style={{fontSize: 10, display: \"flex\", flexDirection: \"column\"}}\r\n        title=\"Compress vertically\"\r\n        {...props}\r\n    >\r\n        <FontAwesomeIcon key={1} icon={faArrowDown} />\r\n        <FontAwesomeIcon key={2} icon={faArrowUp} />\r\n    </Button>);\r\n}\r\n\r\n\r\nfunction AscendingSortButton(props) {\r\n    return (<Button\r\n        title=\"Sort in ascending order\"\r\n        {...props}\r\n    >\r\n        <FontAwesomeIcon key={1} icon={faSortAmountUp} flip=\"vertical\"/>\r\n    </Button>);\r\n}\r\n\r\n\r\nfunction DescendingSortButton(props) {\r\n    return (<Button\r\n        title=\"Sort in descending order\"\r\n        {...props}\r\n    >\r\n        <FontAwesomeIcon key={1} icon={faSortAmountUp}/>\r\n    </Button>);\r\n}\r\n\r\n\r\nfunction AlignTipsRightButton(props) {\r\n    return (<Button\r\n        title=\"Align tips to right\"\r\n        {...props}\r\n    >\r\n        <FontAwesomeIcon key={1} icon={faAlignRight}/>\r\n    </Button>);\r\n}\r\n\r\n\r\nfunction AlignTipsLeftButton(props) {\r\n    return (<Button\r\n        title=\"Align tips to left\"\r\n        {...props}\r\n    >\r\n        <FontAwesomeIcon key={1} icon={faAlignLeft}/>\r\n    </Button>);\r\n}\r\n\r\n\r\nclass PhiloTreeC extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tree: null,\r\n            width: 500,\r\n            height: 500,\r\n            alignTips: \"right\",\r\n            sort: null,\r\n            internal: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    toggleDimension(dimension, direction) {\r\n\r\n        if(this.state[dimension] > 550 && direction == \"expand\"){\r\n            return;\r\n        }\r\n        else if(this.state[dimension] < 430 &&  direction != \"expand\"){\r\n            return;\r\n        }\r\n            const new_dimension = this.state[dimension] +\r\n            (direction == \"expand\" ? 20 : -20),\r\n            new_state = {};\r\n        new_state[dimension] = new_dimension;\r\n        this.setState(new_state);\r\n    }\r\n    handleSort(direction) {\r\n        this.setState({sort: direction});\r\n    }\r\n    alignTips(direction) {\r\n        this.setState({alignTips: direction});\r\n    }\r\n    render() {\r\n        const { padding } = this.props;\r\n        const { width, height } = this.state;\r\n        return (<div style={{textAlign: \"center\"}}>\r\n            <h3 className=\"title_tree\">{this.props.title}</h3>\r\n            <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                <ButtonGroup>\r\n                    <HorizontalExpansionButton\r\n                        onClick={()=>this.toggleDimension(\"width\", \"expand\")} style={{ backgroundColor: \"#6A5ACD\"}}\r\n                    />\r\n                    <HorizontalCompressionButton\r\n                        onClick={()=>this.toggleDimension(\"width\", \"compress\")} style={{backgroundColor: \"#6A5ACD\"}}\r\n                    />\r\n                    <VerticalExpansionButton\r\n                        onClick={()=>this.toggleDimension(\"height\", \"expand\")} style={{backgroundColor: \"#6A5ACD\"}}\r\n                    />\r\n                    <VerticalCompressionButton\r\n                        onClick={()=>this.toggleDimension(\"height\", \"compress\")} style={{backgroundColor: \"#6A5ACD\"}}\r\n                    />\r\n                    <AscendingSortButton\r\n                        onClick={()=>this.handleSort(\"ascending\")} style={{backgroundColor: \"#6A5ACD\"}}\r\n                    />\r\n                    <DescendingSortButton\r\n                        onClick={()=>this.handleSort(\"descending\")} style={{backgroundColor: \"#6A5ACD\"}}\r\n                    />\r\n                    <AlignTipsLeftButton\r\n                        onClick={()=>this.alignTips(\"left\")} style={{backgroundColor: \"#6A5ACD\"}}\r\n                    />\r\n                    <AlignTipsRightButton\r\n                        onClick={()=>this.alignTips(\"right\")} style={{backgroundColor: \"#6A5ACD\"}}\r\n                    />\r\n                </ButtonGroup>\r\n                {/*<div>*/}\r\n                {/*    <input*/}\r\n                {/*        type='checkbox'*/}\r\n                {/*        onChange={()=>this.setState({internal: !this.state.internal})}*/}\r\n                {/*    />*/}\r\n                {/*    {this.state.internal ? 'Hide' : 'Show' } internal labels*/}\r\n                {/*</div>*/}\r\n            </div>\r\n            <svg width={width} height={height}>\r\n                <Phylotree\r\n                    width={width-2*padding}\r\n                    height={height-2*padding}\r\n                    transform={`translate(${padding}, ${padding})`}\r\n                    newick= {this.props.newick}\r\n                    alignTips={this.state.alignTips}\r\n                    sort={this.state.sort}\r\n                    internalNodeLabels={this.state.internal}\r\n                    includeBLAxis\r\n                />\r\n            </svg>\r\n        </div>);\r\n    }\r\n}\r\n\r\nPhiloTreeC.defaultProps = {\r\n    padding: 10\r\n};\r\n\r\n\r\nexport default PhiloTreeC;\r\n","export default __webpack_public_path__ + \"static/media/slide1.5e81f7c3.jpg\";","export default __webpack_public_path__ + \"static/media/slide2.f1bb7480.jpg\";","export default __webpack_public_path__ + \"static/media/slide3.726381d6.jpg\";","export default __webpack_public_path__ + \"static/media/slide4.7e9941c4.jpg\";","export default __webpack_public_path__ + \"static/media/slide5.e79ff69b.jpg\";","export default __webpack_public_path__ + \"static/media/slide6.d77af08c.jpg\";","import React, {Component} from \"react\";\r\nimport {Card, Fade, Container, Row, Col, Carousel} from \"react-bootstrap\";\r\nimport {Bell, Book} from 'react-bootstrap-icons';\r\nimport styles from '../styles/MainPage.css';\r\nimport FadeIn from 'react-fade-in';\r\nimport PhiloTreeC from \"../components/PhiloTreeC\"\r\nimport slide1 from \"../assets/images/slide1.jpg\"\r\nimport slide2 from \"../assets/images/slide2.jpg\"\r\nimport slide3 from \"../assets/images/slide3.jpg\"\r\nimport slide4 from \"../assets/images/slide4.jpg\"\r\nimport slide5 from \"../assets/images/slide5.jpg\"\r\nimport slide6 from \"../assets/images/slide6.jpg\"\r\nimport {faDna, faAtom} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport AwesomeSlider from 'react-awesome-slider';\r\nimport 'react-awesome-slider/dist/styles.css';\r\nimport CoreStyles from 'react-awesome-slider/src/core/styles.scss';\r\nimport AnimationStyles from 'react-awesome-slider/src/styled/fold-out-animation/fold-out-animation.scss';\r\nimport axios from \"axios\";\r\nimport AwesomeSliderStyles from 'react-awesome-slider/src/styles';\r\nimport GenesByClusterC from \"../components/GenesByClusterC\";\r\nimport DropdownCheckbox from \"../components/DropdownCheckbox\";\r\nimport CorrelationGraph from \"../components/CorrelationGraph\";\r\nimport CorrelationResultsPage from \"./CorrelationResultsPage\";\r\n\r\n\r\nclass MainPage extends Component {\r\n\r\n    state = {source: null};\r\n\r\n    // componentDidMount() {\r\n    //     this.origcol = this.card.current.style.backgroundColor;\r\n    //     this.card.current.addEventListener('mouseenter', this.changeBackground_e)\r\n    //     this.card.current.addEventListener('mouseleave', this.changeBackground_l)\r\n    // }\r\n\r\n\r\n    // componentDidMount() {\r\n    //     axios\r\n    //         .get(\r\n    //             \"http://127.0.0.1:8801/api/v1/genes\",\r\n    //             { responseType: 'arraybuffer' },\r\n    //         )\r\n    //         .then(response => {\r\n    //             const base64 = btoa(\r\n    //                 new Uint8Array(response.data).reduce(\r\n    //                     (data, byte) => data + String.fromCharCode(byte),\r\n    //                     '',\r\n    //                 ),\r\n    //             );\r\n    //             this.setState({ source: \"data:;base64,\" + base64 });\r\n    //         });\r\n    // }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <FadeIn>\r\n                    {/*<Container style={{maxHeight: \"1080px\"}} fluid>*/}\r\n                    {/*    <Row xs={1}  >*/}\r\n                    {/*        <Col md={3}>*/}\r\n                    {/*            <Row >*/}\r\n                    {/*            <Card style={{textAlign: 'left'}}>*/}\r\n                    {/*            <Card.Header><Bell/> News</Card.Header>*/}\r\n                    {/*            <Card.Body className=\"sidecards\">*/}\r\n                    {/*                <Card.Text >*/}\r\n                    {/*                    With supporting text below as a natural lead-in to additional content.*/}\r\n                    {/*                </Card.Text>*/}\r\n                    {/*            </Card.Body>*/}\r\n                    {/*        </Card>*/}\r\n                    {/*            </Row>*/}\r\n                    {/*            <Row>*/}\r\n                    {/*            <Card style={{textAlign: 'left'}}>*/}\r\n                    {/*                <Card.Header><Book/> Cite Us</Card.Header>*/}\r\n                    {/*                <Card.Body className=\"sidecards\">*/}\r\n                    {/*                    <Card.Text >*/}\r\n                    {/*                        With supporting text below as a natural lead-in to additional content.*/}\r\n                    {/*                    </Card.Text>*/}\r\n                    {/*                </Card.Body>*/}\r\n                    {/*            </Card>*/}\r\n                    {/*            </Row>*/}\r\n                    {/*            </Col>*/}\r\n\r\n                    {/*        <Col md={5} >*/}\r\n                    {/*            <h3 className=\"desc\"> <FontAwesomeIcon icon={faDna} />  Welcome to Pseudomonas Aeruginosite</h3>*/}\r\n                    {/*            <Card body className=\"main_c\" style={{display: \"inline-block\"}}>*/}\r\n                    {/*                <p>Pseudomonas Aeruginosa is a commonly studied pathogen in the biological research community. Its field of research is considered as a study attraction for its diverse metabolic capacity and the danger it imposes on infections in cystic fibrosis patients. Many strains of this bacteria (~5000 strains) have different genes (~6000 genes for each strain), accompanied by a growing variety of distinct defense systems, which delegates them with persistent antimicrobial-resistance attributes and unique characteristics.*/}\r\n                    {/*                    Due to this heavy amount of information gathered throughout the years by many laboratory tests and studies, the need for a cross-referenced information arose. Today there are many databases which portrait the plenty and diverse bacteria species and genes, but most of them provide services and tools for a broad diversity of bacterias and loses the advantage of specializing in defense systems in Pseudomonas Aeruginosa species. Besides, the available databases lack well-suited visualization and statistical tools for defense systems in P. Aeruginosa species and do not allow potential characteristics analysis between them and their immune systems.*/}\r\n                    {/*                    This project binds data collected by biologists and existing databases into an accessible and user-friendly web-platform, which will help researchers to map between the significant amount of information on the divergent P. Aeruginosa gene's attributes and the different known defense systems. The platform will provide information retrieval tools, statistical information analysis, and visualization implementations to better understand the data involved. Also, the application will provide supplementary information and conclusions by using different machine learning, AI, and algorithms to find the connection and resemblance between the distinct defense systems and their correlation with plain genome attributes and characteristics. Also, the platform will deal with queries (by allowing simple and advanced search methods) and will retrieve data accordingly to the user's request. The goal of this project is to supply the researchers and scientists community with a web interface to consume, map, and visualize the rather complex information on P. Aeruginosa defense systems. The project will provide tools to find the similarities between P. Aeruginosa defense systems, and ultimately serve as a tool to cover the gap between the abundant amount of research information and the organized biological data in that specific field.*/}\r\n                    {/*                </p>*/}\r\n                    {/*                <h6 style={{textAlign: 'center'}}><FontAwesomeIcon icon={faAtom} /> <FontAwesomeIcon icon={faAtom} /> <FontAwesomeIcon icon={faAtom} />  </h6>*/}\r\n                    {/*                <p>Our system objective is to map between the significant amount of information on the Pseudomonas Aeruginosa's gene's attributes and the different known defense systems (For further information regarding the subject can be found in literature survey documentation). It will aim to provide tools to the community of biologists who desire to extract divergent data about the bacteria, such as statistical information analysis, visualization realizations and information retrieval tools that will assist them in comprehending the abundant data concerning the subject. The system will also offer further information and conclusions by utilizing machine learning methods to connect between the different defense systems and their genome attributes and features. Ultimately, the system will cover the gap between the copious and constantly growing research information and the organized biological data in that given field.</p>*/}\r\n                    {/*            </Card>*/}\r\n                    {/*        </Col>*/}\r\n\r\n                    {/*        <Col md={4}>*/}\r\n                    {/*            <div style={{textAlign: \"right\"}}>*/}\r\n                    {/*            /!*<PhiloTreeC  title={\"React PhyloTree Test\"} newick={\"(((EELA:0.150276,CONGERA:0.213019):0.230956,(EELB:0.263487,CONGERB:0.202633):0.246917):0.094785,((CAVEFISH:0.451027,(GOLDFISH:0.340495,ZEBRAFISH:0.390163):0.220565):0.067778,((((((NSAM:0.008113,NARG:0.014065):0.052991,SPUN:0.061003,(SMIC:0.027806,SDIA:0.015298,SXAN:0.046873):0.046977):0.009822,(NAUR:0.081298,(SSPI:0.023876,STIE:0.013652):0.058179):0.091775):0.073346,(MVIO:0.012271,MBER:0.039798):0.178835):0.147992,((BFNKILLIFISH:0.317455,(ONIL:0.029217,XCAU:0.084388):0.201166):0.055908,THORNYHEAD:0.252481):0.061905):0.157214,LAMPFISH:0.717196,((SCABBARDA:0.189684,SCABBARDB:0.362015):0.282263,((VIPERFISH:0.318217,BLACKDRAGON:0.109912):0.123642,LOOSEJAW:0.397100):0.287152):0.140663):0.206729):0.222485,(COELACANTH:0.558103,((CLAWEDFROG:0.441842,SALAMANDER:0.299607):0.135307,((CHAMELEON:0.771665,((PIGEON:0.150909,CHICKEN:0.172733):0.082163,ZEBRAFINCH:0.099172):0.272338):0.014055,((BOVINE:0.167569,DOLPHIN:0.157450):0.104783,ELEPHANT:0.166557):0.367205):0.050892):0.114731):0.295021)\"}/>*!/*/}\r\n                    {/*                <Carousel >*/}\r\n                    {/*                    <Carousel.Item >*/}\r\n                    {/*                        <img style={{ borderRadius: \"15px\"}}*/}\r\n                    {/*                            className=\"d-block w-100\"*/}\r\n                    {/*                            src={slide1}*/}\r\n                    {/*                            alt=\"First slide\"*/}\r\n                    {/*                        />*/}\r\n                    {/*                        <Carousel.Caption>*/}\r\n                    {/*                            <div className=\"slidecaption\">*/}\r\n                    {/*                                <h3 className=\"xbootstrap\">Browse</h3>*/}\r\n                    {/*                                <p className=\"xbootstrap\">Different species of the Pseudomonas Aeruginosa bacteria</p>*/}\r\n                    {/*                            </div>*/}\r\n                    {/*                        </Carousel.Caption>*/}\r\n                    {/*                    </Carousel.Item>*/}\r\n                    {/*                    <Carousel.Item>*/}\r\n                    {/*                        <img style={{ borderRadius: \"15px\"}}*/}\r\n                    {/*                            className=\"d-block w-100\"*/}\r\n                    {/*                            src={slide2}*/}\r\n                    {/*                            alt=\"Third slide\"*/}\r\n                    {/*                        />*/}\r\n\r\n                    {/*                        <Carousel.Caption>*/}\r\n                    {/*                            <div className=\"slidecaption\">*/}\r\n                    {/*                                <h3 className=\"xbootstrap\">Discover</h3>*/}\r\n                    {/*                                <p className=\"xbootstrap\">Connections between species and their connections to the defense systems</p>*/}\r\n                    {/*                            </div>*/}\r\n                    {/*                        </Carousel.Caption>*/}\r\n                    {/*                    </Carousel.Item>*/}\r\n                    {/*                    <Carousel.Item>*/}\r\n                    {/*                        <img style={{ borderRadius: \"15px\"}}*/}\r\n                    {/*                            className=\"d-block w-100\"*/}\r\n                    {/*                            src={slide3}*/}\r\n                    {/*                            alt=\"Third slide\"*/}\r\n                    {/*                        />*/}\r\n\r\n                    {/*                        <Carousel.Caption>*/}\r\n                    {/*                            <div className=\"slidecaption\">*/}\r\n                    {/*                                <h3 className=\"xbootstrap\">Analyze</h3>*/}\r\n                    {/*                                <p className=\"xbootstrap\">New information about different genes</p>*/}\r\n                    {/*                            </div>*/}\r\n                    {/*                        </Carousel.Caption>*/}\r\n                    {/*                    </Carousel.Item>*/}\r\n                    {/*                </Carousel>*/}\r\n                    {/*            </div>*/}\r\n                    {/*        </Col>*/}\r\n\r\n                    {/*    </Row>*/}\r\n\r\n                    {/*</Container>*/}\r\n                    <div style={{width: \"98%\", marginLeft: \"1%\"}}>\r\n                        <Carousel>\r\n                            <Carousel.Item>\r\n                                <img\r\n                                    style={{height: \"750px\", objectFit: 'cover'}}\r\n                                    className=\"d-block w-100\"\r\n                                    src={slide4}\r\n                                    alt=\"First slide\"\r\n                                />\r\n                                <Carousel.Caption>\r\n                                    <div className=\"caption_wrper\">\r\n                                    <div className=\"slidecaption\">\r\n                                        <h1>Pseudomonoas AeruginoSite</h1>\r\n                                    </div>\r\n                                    </div>\r\n                                    {/*<p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>*/}\r\n                                </Carousel.Caption>\r\n                            </Carousel.Item>\r\n                            <Carousel.Item>\r\n                                <img\r\n                                    style={{height: \"750px\", objectFit: 'cover'}}\r\n                                    className=\"d-block w-100\"\r\n                                    src={slide5}\r\n                                    alt=\"Second slide\"\r\n                                />\r\n\r\n                                <Carousel.Caption>\r\n                                    <div className=\"caption_wrper\">\r\n                                    <div className=\"slidecaption\">\r\n                                        <h3>Web-platform for exploration of the bacteria Pseudomonas Aeruginosa</h3>\r\n                                        <p>Explore strains,genes and defense systems using advanced visualization and\r\n                                            tabular tools for convenient research </p>\r\n                                    </div>\r\n                                    </div>\r\n                                </Carousel.Caption>\r\n                            </Carousel.Item>\r\n                            <Carousel.Item>\r\n                                <img\r\n                                    style={{height: \"750px\", objectFit: 'cover'}}\r\n                                    className=\"d-block w-100\"\r\n                                    src={slide6}\r\n                                    alt=\"Third slide\"\r\n                                />\r\n\r\n                                <Carousel.Caption>\r\n                                    <div className=\"caption_wrper\">\r\n                                    <div className=\"slidecaption\">\r\n                                        <h3>Contact us and Citation</h3>\r\n                                        <p>Let us know if anything is missing or any feedback</p>\r\n                                    </div>\r\n                                    </div>\r\n                                </Carousel.Caption>\r\n                            </Carousel.Item>\r\n                        </Carousel>\r\n                    </div>\r\n                </FadeIn>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, {useState} from \"react\";\r\nimport {Form, Col, Row, Button, OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport searchlogo from '../assets/images/research.png'\r\nimport {faQuestion} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {Link} from 'react-router-dom';\r\nimport * as ReactDOM from 'react-dom';\r\nimport {MultiSelect} from '@progress/kendo-react-dropdowns';\r\nimport {filterBy} from '@progress/kendo-data-query';\r\nimport axios from \"axios\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\nexport default function StrainCircosPage() {\r\n    const [strainVariableName, setStrainVariableName] = React.useState(\"\")\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState([]);\r\n    const loading = open && options.length === 0;\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n        (async () => {\r\n            const response = await fetch('https://paeruginosite.herokuapp.com/api/v1/strains');\r\n            await sleep(1e3); // For demo purposes.\r\n            const strains = await response.json();\r\n            if (active) {\r\n                setOptions(strains.filter(x=> x.name != null))\r\n            }\r\n\r\n        })();\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    },[loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n            <FadeIn>\r\n                <Form>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label className=\"wrapper\" column sm=\"4\">\r\n                            <p style={{textAlign: \"right\"}}></p>\r\n                        </Form.Label>\r\n                        <Col sm=\"4\">\r\n                            <div className=\"imgr_wr\">\r\n                                <img style={{display: \"inline-block\"}} className=\"imgr\" src={searchlogo}/>\r\n                            </div>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"selectStrain\">\r\n                        <Form.Label className=\"wrapper\" column sm=\"4\">\r\n                            <p style={{textAlign: \"right\"}}>Select a strain</p>\r\n                        </Form.Label>\r\n\r\n                        <Col sm=\"4\">\r\n                            <Autocomplete className=\"textBox\"\r\n                                id=\"asynchronous-demo\"\r\n                                multiple={false}\r\n                                style={{ width: 800 }}\r\n                                open={open}\r\n                                onOpen={() => {\r\n                                    setOpen(true);\r\n                                }}\r\n                                onClose={() => {\r\n                                    setOpen(false);\r\n                                }}\r\n                                getOptionSelected={(option, value) => option.name === value.name}\r\n                                getOptionLabel={(option) => option.name}\r\n                                options={options}\r\n                                loading={loading}\r\n                                onInputChange={(event,newInputEvent) =>\r\n                                {\r\n                                    setStrainVariableName(newInputEvent);\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        label=\"Choose a strain...\"\r\n                                        variant=\"outlined\"\r\n                                        InputProps={{\r\n                                            ...params.InputProps,\r\n                                            endAdornment: (\r\n                                                <React.Fragment>\r\n                                                    {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                                    {params.InputProps.endAdornment}\r\n                                                </React.Fragment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Link to={{\r\n                            pathname: '/resultsCircosStrain',\r\n                            state: {\r\n                                strainVariableName: strainVariableName, // send the selected strain to the result display page\r\n                            }\r\n                        }}><Button>Display</Button></Link>\r\n                    </div>\r\n                </Form>\r\n            </FadeIn>\r\n        </div>\r\n    );\r\n}","import React, {Component} from \"react\";\r\nimport {Card} from \"react-bootstrap\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport '../styles/NavBarC.css';\r\nimport SearchPage from \"../pages/SearchPage\";\r\nimport ResultsPage from \"../pages/ResultsPage\";\r\nimport BrowsePage from \"../pages/BrowsePage\";\r\nimport DownloadPage from \"../pages/DownloadPage\";\r\nimport CorrelationResultsPage from \"../pages/CorrelationResultsPage\";\r\nimport CorrelationSearchPage from \"../pages/CorrelationSearchPage\"\r\nimport MainPage from \"../pages/MainPage\";\r\nimport StrainCircosResultsPage from \"../pages/StrainCircosResultsPage\"\r\nimport StrainCircosPage from \"../pages/StrainCircosPage\";\r\nimport {HashRouter as Switch} from \"react-router-dom\";\r\nimport {Route} from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NavBarC extends Component {\r\n    static = {};\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card className=\"card_m\">\r\n                    <Card.Header style={{marginBottom: \"2%\"}}>\r\n                        <Nav fill activeKey=\"/\">\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/search\">Search</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/CircosStrain\">Circos Strain View</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/browse\">Browse</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/download\">Download</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link as={Link} to=\"/CorrelationSearchPage\">Correlation</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"body_c\" style={{minHeight: '600px', padding: '0px'}}>\r\n                    <span className=\"cb\">\r\n                    <Card.Text>\r\n                        <Switch>\r\n                            <Route path=\"/search\">\r\n                                <SearchPage/>\r\n                            </Route>\r\n\r\n                            <Route path=\"/results\">\r\n                                <ResultsPage/>\r\n                            </Route>\r\n\r\n                            <Route path=\"/browse\">\r\n                                <BrowsePage/>\r\n                            </Route>\r\n\r\n                            <Route path=\"/download\">\r\n                                <DownloadPage/>\r\n                            </Route>\r\n\r\n                            <Route path=\"/CircosStrain\">\r\n                                <StrainCircosPage/>\r\n                            </Route>\r\n\r\n                            <Route path=\"/resultsCircosStrain\">\r\n                                <StrainCircosResultsPage/>\r\n                            </Route>\r\n\r\n                            <Route path=\"/CorrelationSearchPage\">\r\n                                <CorrelationSearchPage/>\r\n                            </Route>\r\n\r\n                            <Route path=\"/resultsCorrelationPage\">\r\n                                <CorrelationResultsPage/>\r\n                            </Route>\r\n\r\n                            <Route exact path=\"/\">\r\n                                <MainPage/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </Card.Text>\r\n                        </span>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"c_footer\">About</Card.Footer>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBarC;","export default __webpack_public_path__ + \"static/media/title.af9adee1.png\";","import NavBarC from \"./components/NavBarC\";\r\nimport './App.css';\r\nimport title from './assets/images/title.png';\r\nimport {HashRouter as Router} from \"react-router-dom\";\r\nimport 'react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img className=\"title\" src={title}/>\r\n                <div className=\"mainDiv\">\r\n                    <Router>\r\n                        <NavBarC />\r\n                    </Router>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter basename=\"/pasite-frontend/\">\r\n            <App/>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}